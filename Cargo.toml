[workspace]
members = [
    "crates/*",
    "lib/*",
    "xtask/"
]
resolver = "2"

[workspace.package]
rust-version = "1.71"

[workspace.dependencies]
# supporting crates unrelated to postgres
line_index = { path = "./lib/line_index", version = "0.0.0" }
tree_sitter_sql = { path = "./lib/tree_sitter_sql", version = "0.0.0" }
tree-sitter = "0.20.10"
tracing = "0.1.40"
schemars           = { version = "0.8.21", features = ["indexmap2", "smallvec"] }
serde = "1.0.195"
serde_json = "1.0.114"
proc-macro2 = "1.0.66"
termcolor          = "1.4.1"
unicode-width      = "0.1.12"
text-size = "1.1.1"
enumflags2         = "0.7.10"
similar            = "2.6.0"
bpaf               = { version = "0.9.15", features = ["derive"] }
quote = "1.0.33"
syn                = "1.0.109"

# postgres specific crates
pg_lexer = { path = "./crates/pg_lexer", version = "0.0.0" }
pg_markup = { path = "./crates/pg_markup", version = "0.0.0" }
pg_console = { path = "./crates/pg_console", version = "0.0.0" }
pg_text_edit = { path = "./crates/pg_text_edit", version = "0.0.0" }
pg_workspace_new = { path = "./crates/pg_workspace_new", version = "0.0.0" }
pg_fs = { path = "./crates/pg_fs", version = "0.0.0" }
pg_diagnostics = { path = "./crates/pg_diagnostics", version = "0.0.0" }
pg_diagnostics_macros = { path = "./crates/pg_diagnostics_macros", version = "0.0.0" }
pg_lexer_codegen = { path = "./crates/pg_lexer_codegen", version = "0.0.0" }
pg_statement_splitter = { path = "./crates/pg_statement_splitter", version = "0.0.0" }
pg_query_ext = { path = "./crates/pg_query_ext", version = "0.0.0" }
pg_query_ext_codegen = { path = "./crates/pg_query_ext_codegen", version = "0.0.0" }
pg_syntax = { path = "./crates/pg_syntax", version = "0.0.0" }
pg_schema_cache = { path = "./crates/pg_schema_cache", version = "0.0.0" }
pg_commands = { path = "./crates/pg_commands", version = "0.0.0" }
pg_completions = { path = "./crates/pg_completions", version = "0.0.0" }
pg_base_db = { path = "./crates/pg_base_db", version = "0.0.0" }
pg_query_proto_parser = { path = "./crates/pg_query_proto_parser", version = "0.0.0" }
pg_typecheck = { path = "./crates/pg_typecheck", version = "0.0.0" }
pg_type_resolver = { path = "./crates/pg_type_resolver", version = "0.0.0" }
pg_hover = { path = "./crates/pg_hover", version = "0.0.0" }
pg_inlay_hints = { path = "./crates/pg_inlay_hints", version = "0.0.0" }
pg_lint = { path = "./crates/pg_lint", version = "0.0.0" }
pg_workspace = { path = "./crates/pg_workspace", version = "0.0.0" }
pg_lsp = { path = "./crates/lsp", version = "0.0.0" }

# parser = { path = "./crates/parser", version = "0.0.0" }
# sql_parser = { path = "./crates/sql_parser", version = "0.0.0" }
# sql_parser_codegen = { path = "./crates/sql_parser_codegen", version = "0.0.0" }


[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3
