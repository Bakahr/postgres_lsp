//! This module bridges the gap between pg_query.rs nodes, and the `SyntaxKind` cstree requires.
//! Most of the code here can be generated.

use cstree::Syntax;
use pg_query::{protobuf::ScanToken, NodeEnum, NodeRef};

/// An u32 enum of all valid syntax elements (nodes and tokens) of the postgres sql dialect, and a few custom ones
/// that are not parsed by pg_query.rs, such as `Whitespace`.
///
/// Copied from pg_query.rs source code. Can be generated.
#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, Syntax)]
#[repr(u32)]
pub enum SyntaxKind {
    // custom nodes, which are not parsed by pg_query.rs
    SourceFile,
    Comment,
    Whitespace,
    Newline,
    Tab,
    /// common value for all keywords (select, from, ...)
    Word,
    /// node for unknown statements (e.g. when parsing fails)
    Stmt,
    // from here copyied from NodeEnum
    Alias,
    RangeVar,
    TableFunc,
    Expr,
    Var,
    Param,
    Aggref,
    GroupingFunc,
    WindowFunc,
    SubscriptingRef,
    FuncExpr,
    NamedArgExpr,
    OpExpr,
    DistinctExpr,
    NullIfExpr,
    ScalarArrayOpExpr,
    BoolExpr,
    SubLink,
    SubPlan,
    AlternativeSubPlan,
    FieldSelect,
    FieldStore,
    RelabelType,
    CoerceViaIo,
    ArrayCoerceExpr,
    ConvertRowtypeExpr,
    CollateExpr,
    CaseExpr,
    CaseWhen,
    CaseTestExpr,
    ArrayExpr,
    RowExpr,
    RowCompareExpr,
    CoalesceExpr,
    MinMaxExpr,
    SqlvalueFunction,
    XmlExpr,
    NullTest,
    BooleanTest,
    CoerceToDomain,
    CoerceToDomainValue,
    SetToDefault,
    CurrentOfExpr,
    NextValueExpr,
    InferenceElem,
    TargetEntry,
    RangeTblRef,
    JoinExpr,
    FromExpr,
    OnConflictExpr,
    IntoClause,
    RawStmt,
    Query,
    InsertStmt,
    DeleteStmt,
    UpdateStmt,
    SelectStmt,
    AlterTableStmt,
    AlterTableCmd,
    AlterDomainStmt,
    SetOperationStmt,
    GrantStmt,
    GrantRoleStmt,
    AlterDefaultPrivilegesStmt,
    ClosePortalStmt,
    ClusterStmt,
    CopyStmt,
    CreateStmt,
    DefineStmt,
    DropStmt,
    TruncateStmt,
    CommentStmt,
    FetchStmt,
    IndexStmt,
    CreateFunctionStmt,
    AlterFunctionStmt,
    DoStmt,
    RenameStmt,
    RuleStmt,
    NotifyStmt,
    ListenStmt,
    UnlistenStmt,
    TransactionStmt,
    ViewStmt,
    LoadStmt,
    CreateDomainStmt,
    CreatedbStmt,
    DropdbStmt,
    VacuumStmt,
    ExplainStmt,
    CreateTableAsStmt,
    CreateSeqStmt,
    AlterSeqStmt,
    VariableSetStmt,
    VariableShowStmt,
    DiscardStmt,
    CreateTrigStmt,
    CreatePlangStmt,
    CreateRoleStmt,
    AlterRoleStmt,
    DropRoleStmt,
    LockStmt,
    ConstraintsSetStmt,
    ReindexStmt,
    CheckPointStmt,
    CreateSchemaStmt,
    AlterDatabaseStmt,
    AlterDatabaseSetStmt,
    AlterRoleSetStmt,
    CreateConversionStmt,
    CreateCastStmt,
    CreateOpClassStmt,
    CreateOpFamilyStmt,
    AlterOpFamilyStmt,
    PrepareStmt,
    ExecuteStmt,
    DeallocateStmt,
    DeclareCursorStmt,
    CreateTableSpaceStmt,
    DropTableSpaceStmt,
    AlterObjectDependsStmt,
    AlterObjectSchemaStmt,
    AlterOwnerStmt,
    AlterOperatorStmt,
    AlterTypeStmt,
    DropOwnedStmt,
    ReassignOwnedStmt,
    CompositeTypeStmt,
    CreateEnumStmt,
    CreateRangeStmt,
    AlterEnumStmt,
    AlterTsdictionaryStmt,
    AlterTsconfigurationStmt,
    CreateFdwStmt,
    AlterFdwStmt,
    CreateForeignServerStmt,
    AlterForeignServerStmt,
    CreateUserMappingStmt,
    AlterUserMappingStmt,
    DropUserMappingStmt,
    AlterTableSpaceOptionsStmt,
    AlterTableMoveAllStmt,
    SecLabelStmt,
    CreateForeignTableStmt,
    ImportForeignSchemaStmt,
    CreateExtensionStmt,
    AlterExtensionStmt,
    AlterExtensionContentsStmt,
    CreateEventTrigStmt,
    AlterEventTrigStmt,
    RefreshMatViewStmt,
    ReplicaIdentityStmt,
    AlterSystemStmt,
    CreatePolicyStmt,
    AlterPolicyStmt,
    CreateTransformStmt,
    CreateAmStmt,
    CreatePublicationStmt,
    AlterPublicationStmt,
    CreateSubscriptionStmt,
    AlterSubscriptionStmt,
    DropSubscriptionStmt,
    CreateStatsStmt,
    AlterCollationStmt,
    CallStmt,
    AlterStatsStmt,
    AExpr,
    ColumnRef,
    ParamRef,
    AConst,
    FuncCall,
    AStar,
    AIndices,
    AIndirection,
    AArrayExpr,
    ResTarget,
    MultiAssignRef,
    TypeCast,
    CollateClause,
    SortBy,
    WindowDef,
    RangeSubselect,
    RangeFunction,
    RangeTableSample,
    RangeTableFunc,
    RangeTableFuncCol,
    TypeName,
    ColumnDef,
    IndexElem,
    Constraint,
    DefElem,
    RangeTblEntry,
    RangeTblFunction,
    TableSampleClause,
    WithCheckOption,
    SortGroupClause,
    GroupingSet,
    WindowClause,
    ObjectWithArgs,
    AccessPriv,
    CreateOpClassItem,
    TableLikeClause,
    FunctionParameter,
    LockingClause,
    RowMarkClause,
    XmlSerialize,
    WithClause,
    InferClause,
    OnConflictClause,
    CommonTableExpr,
    RoleSpec,
    TriggerTransition,
    PartitionElem,
    PartitionSpec,
    PartitionBoundSpec,
    PartitionRangeDatum,
    PartitionCmd,
    VacuumRelation,
    InlineCodeBlock,
    CallContext,
    // Integer,
    Float,
    String,
    BitString,
    Null,
    List,
    IntList,
    OidList,
    // from here copied from protobuf::Token
    Nul,
    /// Single-character tokens that are returned 1:1 (identical with "self" list in scan.l)
    /// Either supporting syntax, or single-character operators (some can be both)
    /// Also see <https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-SYNTAX-SPECIAL-CHARS>
    ///
    /// "%"
    Ascii37,
    /// "("
    Ascii40,
    /// ")"
    Ascii41,
    /// "*"
    Ascii42,
    /// "+"
    Ascii43,
    /// ","
    Ascii44,
    /// "-"
    Ascii45,
    /// "."
    Ascii46,
    /// "/"
    Ascii47,
    /// ":"
    Ascii58,
    /// ";"
    Ascii59,
    /// "<"
    Ascii60,
    /// ",
    Ascii61,
    /// ">"
    Ascii62,
    /// "?"
    Ascii63,
    /// "["
    Ascii91,
    /// "\"
    Ascii92,
    /// "]"
    Ascii93,
    /// "^"
    Ascii94,
    /// Named tokens in scan.l
    Ident,
    Uident,
    Fconst,
    Sconst,
    Usconst,
    Bconst,
    Xconst,
    Op,
    Iconst,
    // Param,
    Typecast,
    DotDot,
    ColonEquals,
    EqualsGreater,
    LessEquals,
    GreaterEquals,
    NotEquals,
    SqlComment,
    CComment,
    AbortP,
    AbsoluteP,
    Access,
    Action,
    AddP,
    Admin,
    After,
    Aggregate,
    All,
    Also,
    Alter,
    Always,
    Analyse,
    Analyze,
    And,
    Any,
    Array,
    As,
    Asc,
    Assertion,
    Assignment,
    Asymmetric,
    At,
    Attach,
    Attribute,
    Authorization,
    Backward,
    Before,
    BeginP,
    Between,
    Bigint,
    Binary,
    Bit,
    BooleanP,
    Both,
    By,
    Cache,
    Call,
    Called,
    Cascade,
    Cascaded,
    Case,
    Cast,
    CatalogP,
    Chain,
    CharP,
    Character,
    Characteristics,
    Check,
    Checkpoint,
    Class,
    Close,
    Cluster,
    Coalesce,
    Collate,
    Collation,
    Column,
    Columns,
    // Comment,
    Comments,
    Commit,
    Committed,
    Concurrently,
    Configuration,
    Conflict,
    Connection,
    // Constraint,
    Constraints,
    ContentP,
    ContinueP,
    ConversionP,
    Copy,
    Cost,
    Create,
    Cross,
    Csv,
    Cube,
    CurrentP,
    CurrentCatalog,
    CurrentDate,
    CurrentRole,
    CurrentSchema,
    CurrentTime,
    CurrentTimestamp,
    CurrentUser,
    Cursor,
    Cycle,
    DataP,
    Database,
    DayP,
    Deallocate,
    Dec,
    DecimalP,
    Declare,
    Default,
    Defaults,
    Deferrable,
    Deferred,
    Definer,
    DeleteP,
    Delimiter,
    Delimiters,
    Depends,
    Desc,
    Detach,
    Dictionary,
    DisableP,
    Discard,
    Distinct,
    Do,
    DocumentP,
    DomainP,
    DoubleP,
    Drop,
    Each,
    Else,
    EnableP,
    Encoding,
    Encrypted,
    EndP,
    EnumP,
    Escape,
    Event,
    Except,
    Exclude,
    Excluding,
    Exclusive,
    Execute,
    Exists,
    Explain,
    Expression,
    Extension,
    External,
    Extract,
    FalseP,
    Family,
    Fetch,
    Filter,
    FirstP,
    FloatP,
    Following,
    For,
    Force,
    Foreign,
    Forward,
    Freeze,
    From,
    Full,
    Function,
    Functions,
    Generated,
    Global,
    Grant,
    Granted,
    Greatest,
    GroupP,
    Grouping,
    Groups,
    Handler,
    Having,
    HeaderP,
    Hold,
    HourP,
    IdentityP,
    IfP,
    Ilike,
    Immediate,
    Immutable,
    ImplicitP,
    ImportP,
    InP,
    Include,
    Including,
    Increment,
    Index,
    Indexes,
    Inherit,
    Inherits,
    Initially,
    InlineP,
    InnerP,
    Inout,
    InputP,
    Insensitive,
    Insert,
    Instead,
    IntP,
    Integer,
    Intersect,
    Interval,
    Into,
    Invoker,
    Is,
    Isnull,
    Isolation,
    Join,
    Key,
    Label,
    Language,
    LargeP,
    LastP,
    LateralP,
    Leading,
    Leakproof,
    Least,
    Left,
    Level,
    Like,
    Limit,
    Listen,
    Load,
    Local,
    Localtime,
    Localtimestamp,
    Location,
    LockP,
    Locked,
    Logged,
    Mapping,
    Match,
    Materialized,
    Maxvalue,
    Method,
    MinuteP,
    Minvalue,
    Mode,
    MonthP,
    Move,
    NameP,
    Names,
    National,
    Natural,
    Nchar,
    New,
    Next,
    Nfc,
    Nfd,
    Nfkc,
    Nfkd,
    No,
    None,
    Normalize,
    Normalized,
    Not,
    Nothing,
    Notify,
    Notnull,
    Nowait,
    NullP,
    Nullif,
    NullsP,
    Numeric,
    ObjectP,
    Of,
    Off,
    Offset,
    Oids,
    Old,
    On,
    Only,
    Operator,
    Option,
    Options,
    Or,
    Order,
    Ordinality,
    Others,
    OutP,
    OuterP,
    Over,
    Overlaps,
    Overlay,
    Overriding,
    Owned,
    Owner,
    Parallel,
    Parser,
    Partial,
    Partition,
    Passing,
    Password,
    Placing,
    Plans,
    Policy,
    Position,
    Preceding,
    Precision,
    Preserve,
    Prepare,
    Prepared,
    Primary,
    Prior,
    Privileges,
    Procedural,
    Procedure,
    Procedures,
    Program,
    Publication,
    Quote,
    Range,
    Read,
    Real,
    Reassign,
    Recheck,
    Recursive,
    Ref,
    References,
    Referencing,
    Refresh,
    Reindex,
    RelativeP,
    Release,
    Rename,
    Repeatable,
    Replace,
    Replica,
    Reset,
    Restart,
    Restrict,
    Returning,
    Returns,
    Revoke,
    Right,
    Role,
    Rollback,
    Rollup,
    Routine,
    Routines,
    Row,
    Rows,
    Rule,
    Savepoint,
    Schema,
    Schemas,
    Scroll,
    Search,
    SecondP,
    Security,
    Select,
    Sequence,
    Sequences,
    Serializable,
    Server,
    Session,
    SessionUser,
    Set,
    Sets,
    Setof,
    Share,
    Show,
    Similar,
    Simple,
    Skip,
    Smallint,
    Snapshot,
    Some,
    SqlP,
    Stable,
    StandaloneP,
    Start,
    Statement,
    Statistics,
    Stdin,
    Stdout,
    Storage,
    Stored,
    StrictP,
    StripP,
    Subscription,
    Substring,
    Support,
    Symmetric,
    Sysid,
    SystemP,
    Table,
    Tables,
    Tablesample,
    Tablespace,
    Temp,
    Template,
    Temporary,
    TextP,
    Then,
    Ties,
    Time,
    Timestamp,
    To,
    Trailing,
    Transaction,
    Transform,
    Treat,
    Trigger,
    Trim,
    TrueP,
    Truncate,
    Trusted,
    TypeP,
    TypesP,
    Uescape,
    Unbounded,
    Uncommitted,
    Unencrypted,
    Union,
    Unique,
    Unknown,
    Unlisten,
    Unlogged,
    Until,
    Update,
    User,
    Using,
    Vacuum,
    Valid,
    Validate,
    Validator,
    ValueP,
    Values,
    Varchar,
    Variadic,
    Varying,
    Verbose,
    VersionP,
    View,
    Views,
    Volatile,
    When,
    Where,
    WhitespaceP,
    Window,
    With,
    Within,
    Without,
    Work,
    Wrapper,
    Write,
    XmlP,
    Xmlattributes,
    Xmlconcat,
    Xmlelement,
    Xmlexists,
    Xmlforest,
    Xmlnamespaces,
    Xmlparse,
    Xmlpi,
    Xmlroot,
    Xmlserialize,
    Xmltable,
    YearP,
    YesP,
    Zone,
    NotLa,
    NullsLa,
    WithLa,
    Postfixop,
    Uminus,
}

/// Kind of a `SyntaxKind`
/// This is the only manual definition required for properly creating a concrete syntax tree.
/// If a token is of type `Follow`, it is not immediately applied to the syntax tree, but put into
/// a buffer. Before the next node is started, all buffered tokens are applied to the syntax tree
/// at the depth of the node that is opened next.
///
/// For example, in `select * from contact;`, the whitespace between `*` and `from` should be a direct
/// child of the `SelectStmt` node. Without this concept, it would be put into the `ColumnRef`
/// node.
///
/// SelectStmt@0..22
///   Select@0..6 "select"
///   Whitespace@6..7 " "
///   ResTarget@7..8
///     ColumnRef@7..8
///       Ascii42@7..8 "*"
///   Whitespace@8..9 " "
///   From@9..13 "from"
///   Whitespace@13..14 " "
///   RangeVar@14..21
///     Ident@14..21 "contact"
///   Ascii59@21..22 ";"
pub enum SyntaxKindType {
    Follow,
    Close,
}

impl SyntaxKind {
    /// Converts a `pg_query` node to a `SyntaxKind`
    /// Can be generated
    pub fn from_pg_query_node(node: &NodeRef) -> Self {
        match node {
            NodeRef::SelectStmt(_) => SyntaxKind::SelectStmt,
            NodeRef::Alias(_) => SyntaxKind::Alias,
            NodeRef::RangeVar(_) => SyntaxKind::RangeVar,
            NodeRef::TableFunc(_) => SyntaxKind::TableFunc,
            // NodeRef::Expr(_) => SyntaxKind::Expr,
            NodeRef::Var(_) => SyntaxKind::Var,
            NodeRef::Param(_) => SyntaxKind::Param,
            NodeRef::Aggref(_) => SyntaxKind::Aggref,
            NodeRef::GroupingFunc(_) => SyntaxKind::GroupingFunc,
            NodeRef::WindowFunc(_) => SyntaxKind::WindowFunc,
            NodeRef::SubscriptingRef(_) => SyntaxKind::SubscriptingRef,
            NodeRef::FuncExpr(_) => SyntaxKind::FuncExpr,
            NodeRef::NamedArgExpr(_) => SyntaxKind::NamedArgExpr,
            NodeRef::OpExpr(_) => SyntaxKind::OpExpr,
            NodeRef::DistinctExpr(_) => SyntaxKind::DistinctExpr,
            NodeRef::NullIfExpr(_) => SyntaxKind::NullIfExpr,
            NodeRef::ScalarArrayOpExpr(_) => SyntaxKind::ScalarArrayOpExpr,
            NodeRef::BoolExpr(_) => SyntaxKind::BoolExpr,
            NodeRef::SubLink(_) => SyntaxKind::SubLink,
            NodeRef::SubPlan(_) => SyntaxKind::SubPlan,
            NodeRef::AlternativeSubPlan(_) => SyntaxKind::AlternativeSubPlan,
            NodeRef::FieldSelect(_) => SyntaxKind::FieldSelect,
            NodeRef::FieldStore(_) => SyntaxKind::FieldStore,
            NodeRef::RelabelType(_) => SyntaxKind::RelabelType,
            NodeRef::CoerceViaIo(_) => SyntaxKind::CoerceViaIo,
            NodeRef::ArrayCoerceExpr(_) => SyntaxKind::ArrayCoerceExpr,
            NodeRef::ConvertRowtypeExpr(_) => SyntaxKind::ConvertRowtypeExpr,
            NodeRef::CollateExpr(_) => SyntaxKind::CollateExpr,
            NodeRef::CaseExpr(_) => SyntaxKind::CaseExpr,
            NodeRef::CaseWhen(_) => SyntaxKind::CaseWhen,
            NodeRef::CaseTestExpr(_) => SyntaxKind::CaseTestExpr,
            NodeRef::ArrayExpr(_) => SyntaxKind::ArrayExpr,
            NodeRef::RowExpr(_) => SyntaxKind::RowExpr,
            NodeRef::RowCompareExpr(_) => SyntaxKind::RowCompareExpr,
            NodeRef::CoalesceExpr(_) => SyntaxKind::CoalesceExpr,
            NodeRef::MinMaxExpr(_) => SyntaxKind::MinMaxExpr,
            NodeRef::SqlvalueFunction(_) => SyntaxKind::SqlvalueFunction,
            NodeRef::XmlExpr(_) => SyntaxKind::XmlExpr,
            NodeRef::NullTest(_) => SyntaxKind::NullTest,
            NodeRef::BooleanTest(_) => SyntaxKind::BooleanTest,
            NodeRef::CoerceToDomain(_) => SyntaxKind::CoerceToDomain,
            NodeRef::CoerceToDomainValue(_) => SyntaxKind::CoerceToDomainValue,
            NodeRef::SetToDefault(_) => SyntaxKind::SetToDefault,
            NodeRef::CurrentOfExpr(_) => SyntaxKind::CurrentOfExpr,
            NodeRef::NextValueExpr(_) => SyntaxKind::NextValueExpr,
            NodeRef::InferenceElem(_) => SyntaxKind::InferenceElem,
            NodeRef::TargetEntry(_) => SyntaxKind::TargetEntry,
            NodeRef::RangeTblRef(_) => SyntaxKind::RangeTblRef,
            NodeRef::JoinExpr(_) => SyntaxKind::JoinExpr,
            NodeRef::FromExpr(_) => SyntaxKind::FromExpr,
            NodeRef::OnConflictExpr(_) => SyntaxKind::OnConflictExpr,
            NodeRef::IntoClause(_) => SyntaxKind::IntoClause,
            NodeRef::RawStmt(_) => SyntaxKind::RawStmt,
            NodeRef::Query(_) => SyntaxKind::Query,
            NodeRef::InsertStmt(_) => SyntaxKind::InsertStmt,
            NodeRef::DeleteStmt(_) => SyntaxKind::DeleteStmt,
            NodeRef::UpdateStmt(_) => SyntaxKind::UpdateStmt,
            NodeRef::AlterTableStmt(_) => SyntaxKind::AlterTableStmt,
            NodeRef::AlterTableCmd(_) => SyntaxKind::AlterTableCmd,
            NodeRef::AlterDomainStmt(_) => SyntaxKind::AlterDomainStmt,
            NodeRef::SetOperationStmt(_) => SyntaxKind::SetOperationStmt,
            NodeRef::GrantStmt(_) => SyntaxKind::GrantStmt,
            NodeRef::GrantRoleStmt(_) => SyntaxKind::GrantRoleStmt,
            NodeRef::AlterDefaultPrivilegesStmt(_) => SyntaxKind::AlterDefaultPrivilegesStmt,
            NodeRef::ClosePortalStmt(_) => SyntaxKind::ClosePortalStmt,
            NodeRef::ClusterStmt(_) => SyntaxKind::ClusterStmt,
            NodeRef::CopyStmt(_) => SyntaxKind::CopyStmt,
            NodeRef::CreateStmt(_) => SyntaxKind::CreateStmt,
            NodeRef::DefineStmt(_) => SyntaxKind::DefineStmt,
            NodeRef::DropStmt(_) => SyntaxKind::DropStmt,
            NodeRef::TruncateStmt(_) => SyntaxKind::TruncateStmt,
            NodeRef::CommentStmt(_) => SyntaxKind::CommentStmt,
            NodeRef::FetchStmt(_) => SyntaxKind::FetchStmt,
            NodeRef::IndexStmt(_) => SyntaxKind::IndexStmt,
            NodeRef::CreateFunctionStmt(_) => SyntaxKind::CreateFunctionStmt,
            NodeRef::AlterFunctionStmt(_) => SyntaxKind::AlterFunctionStmt,
            NodeRef::DoStmt(_) => SyntaxKind::DoStmt,
            NodeRef::RenameStmt(_) => SyntaxKind::RenameStmt,
            NodeRef::RuleStmt(_) => SyntaxKind::RuleStmt,
            NodeRef::NotifyStmt(_) => SyntaxKind::NotifyStmt,
            NodeRef::ListenStmt(_) => SyntaxKind::ListenStmt,
            NodeRef::UnlistenStmt(_) => SyntaxKind::UnlistenStmt,
            NodeRef::TransactionStmt(_) => SyntaxKind::TransactionStmt,
            NodeRef::ViewStmt(_) => SyntaxKind::ViewStmt,
            NodeRef::LoadStmt(_) => SyntaxKind::LoadStmt,
            NodeRef::CreateDomainStmt(_) => SyntaxKind::CreateDomainStmt,
            NodeRef::CreatedbStmt(_) => SyntaxKind::CreatedbStmt,
            NodeRef::DropdbStmt(_) => SyntaxKind::DropdbStmt,
            NodeRef::VacuumStmt(_) => SyntaxKind::VacuumStmt,
            NodeRef::ExplainStmt(_) => SyntaxKind::ExplainStmt,
            NodeRef::CreateTableAsStmt(_) => SyntaxKind::CreateTableAsStmt,
            NodeRef::CreateSeqStmt(_) => SyntaxKind::CreateSeqStmt,
            NodeRef::AlterSeqStmt(_) => SyntaxKind::AlterSeqStmt,
            NodeRef::VariableSetStmt(_) => SyntaxKind::VariableSetStmt,
            NodeRef::VariableShowStmt(_) => SyntaxKind::VariableShowStmt,
            NodeRef::DiscardStmt(_) => SyntaxKind::DiscardStmt,
            NodeRef::CreateTrigStmt(_) => SyntaxKind::CreateTrigStmt,
            NodeRef::CreatePlangStmt(_) => SyntaxKind::CreatePlangStmt,
            NodeRef::CreateRoleStmt(_) => SyntaxKind::CreateRoleStmt,
            NodeRef::AlterRoleStmt(_) => SyntaxKind::AlterRoleStmt,
            NodeRef::DropRoleStmt(_) => SyntaxKind::DropRoleStmt,
            NodeRef::LockStmt(_) => SyntaxKind::LockStmt,
            NodeRef::ConstraintsSetStmt(_) => SyntaxKind::ConstraintsSetStmt,
            NodeRef::ReindexStmt(_) => SyntaxKind::ReindexStmt,
            NodeRef::CheckPointStmt(_) => SyntaxKind::CheckPointStmt,
            NodeRef::CreateSchemaStmt(_) => SyntaxKind::CreateSchemaStmt,
            NodeRef::AlterDatabaseStmt(_) => SyntaxKind::AlterDatabaseStmt,
            NodeRef::AlterDatabaseSetStmt(_) => SyntaxKind::AlterDatabaseSetStmt,
            NodeRef::AlterRoleSetStmt(_) => SyntaxKind::AlterRoleSetStmt,
            NodeRef::CreateConversionStmt(_) => SyntaxKind::CreateConversionStmt,
            NodeRef::CreateCastStmt(_) => SyntaxKind::CreateCastStmt,
            NodeRef::CreateOpClassStmt(_) => SyntaxKind::CreateOpClassStmt,
            NodeRef::CreateOpFamilyStmt(_) => SyntaxKind::CreateOpFamilyStmt,
            NodeRef::AlterOpFamilyStmt(_) => SyntaxKind::AlterOpFamilyStmt,
            NodeRef::PrepareStmt(_) => SyntaxKind::PrepareStmt,
            NodeRef::ExecuteStmt(_) => SyntaxKind::ExecuteStmt,
            NodeRef::DeallocateStmt(_) => SyntaxKind::DeallocateStmt,
            NodeRef::DeclareCursorStmt(_) => SyntaxKind::DeclareCursorStmt,
            NodeRef::CreateTableSpaceStmt(_) => SyntaxKind::CreateTableSpaceStmt,
            NodeRef::DropTableSpaceStmt(_) => SyntaxKind::DropTableSpaceStmt,
            NodeRef::AlterObjectDependsStmt(_) => SyntaxKind::AlterObjectDependsStmt,
            NodeRef::AlterObjectSchemaStmt(_) => SyntaxKind::AlterObjectSchemaStmt,
            NodeRef::AlterOwnerStmt(_) => SyntaxKind::AlterOwnerStmt,
            NodeRef::AlterOperatorStmt(_) => SyntaxKind::AlterOperatorStmt,
            NodeRef::AlterTypeStmt(_) => SyntaxKind::AlterTypeStmt,
            NodeRef::DropOwnedStmt(_) => SyntaxKind::DropOwnedStmt,
            NodeRef::ReassignOwnedStmt(_) => SyntaxKind::ReassignOwnedStmt,
            NodeRef::CompositeTypeStmt(_) => SyntaxKind::CompositeTypeStmt,
            NodeRef::CreateEnumStmt(_) => SyntaxKind::CreateEnumStmt,
            NodeRef::CreateRangeStmt(_) => SyntaxKind::CreateRangeStmt,
            NodeRef::AlterEnumStmt(_) => SyntaxKind::AlterEnumStmt,
            NodeRef::AlterTsdictionaryStmt(_) => SyntaxKind::AlterTsdictionaryStmt,
            NodeRef::AlterTsconfigurationStmt(_) => SyntaxKind::AlterTsconfigurationStmt,
            NodeRef::CreateFdwStmt(_) => SyntaxKind::CreateFdwStmt,
            NodeRef::AlterFdwStmt(_) => SyntaxKind::AlterFdwStmt,
            NodeRef::CreateForeignServerStmt(_) => SyntaxKind::CreateForeignServerStmt,
            NodeRef::AlterForeignServerStmt(_) => SyntaxKind::AlterForeignServerStmt,
            NodeRef::CreateUserMappingStmt(_) => SyntaxKind::CreateUserMappingStmt,
            NodeRef::AlterUserMappingStmt(_) => SyntaxKind::AlterUserMappingStmt,
            NodeRef::DropUserMappingStmt(_) => SyntaxKind::DropUserMappingStmt,
            NodeRef::AlterTableSpaceOptionsStmt(_) => SyntaxKind::AlterTableSpaceOptionsStmt,
            NodeRef::AlterTableMoveAllStmt(_) => SyntaxKind::AlterTableMoveAllStmt,
            NodeRef::SecLabelStmt(_) => SyntaxKind::SecLabelStmt,
            NodeRef::CreateForeignTableStmt(_) => SyntaxKind::CreateForeignTableStmt,
            NodeRef::ImportForeignSchemaStmt(_) => SyntaxKind::ImportForeignSchemaStmt,
            NodeRef::CreateExtensionStmt(_) => SyntaxKind::CreateExtensionStmt,
            NodeRef::AlterExtensionStmt(_) => SyntaxKind::AlterExtensionStmt,
            NodeRef::AlterExtensionContentsStmt(_) => SyntaxKind::AlterExtensionContentsStmt,
            NodeRef::CreateEventTrigStmt(_) => SyntaxKind::CreateEventTrigStmt,
            NodeRef::AlterEventTrigStmt(_) => SyntaxKind::AlterEventTrigStmt,
            NodeRef::RefreshMatViewStmt(_) => SyntaxKind::RefreshMatViewStmt,
            NodeRef::ReplicaIdentityStmt(_) => SyntaxKind::ReplicaIdentityStmt,
            NodeRef::AlterSystemStmt(_) => SyntaxKind::AlterSystemStmt,
            NodeRef::CreatePolicyStmt(_) => SyntaxKind::CreatePolicyStmt,
            NodeRef::AlterPolicyStmt(_) => SyntaxKind::AlterPolicyStmt,
            NodeRef::CreateTransformStmt(_) => SyntaxKind::CreateTransformStmt,
            NodeRef::CreateAmStmt(_) => SyntaxKind::CreateAmStmt,
            NodeRef::CreatePublicationStmt(_) => SyntaxKind::CreatePublicationStmt,
            NodeRef::AlterPublicationStmt(_) => SyntaxKind::AlterPublicationStmt,
            NodeRef::CreateSubscriptionStmt(_) => SyntaxKind::CreateSubscriptionStmt,
            NodeRef::AlterSubscriptionStmt(_) => SyntaxKind::AlterSubscriptionStmt,
            NodeRef::DropSubscriptionStmt(_) => SyntaxKind::DropSubscriptionStmt,
            NodeRef::CreateStatsStmt(_) => SyntaxKind::CreateStatsStmt,
            NodeRef::AlterCollationStmt(_) => SyntaxKind::AlterCollationStmt,
            NodeRef::CallStmt(_) => SyntaxKind::CallStmt,
            NodeRef::AlterStatsStmt(_) => SyntaxKind::AlterStatsStmt,
            NodeRef::AExpr(_) => SyntaxKind::AExpr,
            NodeRef::ColumnRef(_) => SyntaxKind::ColumnRef,
            NodeRef::ParamRef(_) => SyntaxKind::ParamRef,
            NodeRef::AConst(_) => SyntaxKind::AConst,
            NodeRef::FuncCall(_) => SyntaxKind::FuncCall,
            NodeRef::AStar(_) => SyntaxKind::AStar,
            NodeRef::AIndices(_) => SyntaxKind::AIndices,
            NodeRef::AIndirection(_) => SyntaxKind::AIndirection,
            NodeRef::AArrayExpr(_) => SyntaxKind::AArrayExpr,
            NodeRef::ResTarget(_) => SyntaxKind::ResTarget,
            NodeRef::MultiAssignRef(_) => SyntaxKind::MultiAssignRef,
            NodeRef::TypeCast(_) => SyntaxKind::TypeCast,
            NodeRef::CollateClause(_) => SyntaxKind::CollateClause,
            NodeRef::SortBy(_) => SyntaxKind::SortBy,
            NodeRef::WindowDef(_) => SyntaxKind::WindowDef,
            NodeRef::RangeSubselect(_) => SyntaxKind::RangeSubselect,
            NodeRef::RangeFunction(_) => SyntaxKind::RangeFunction,
            NodeRef::RangeTableSample(_) => SyntaxKind::RangeTableSample,
            NodeRef::RangeTableFunc(_) => SyntaxKind::RangeTableFunc,
            NodeRef::RangeTableFuncCol(_) => SyntaxKind::RangeTableFuncCol,
            NodeRef::TypeName(_) => SyntaxKind::TypeName,
            NodeRef::ColumnDef(_) => SyntaxKind::ColumnDef,
            NodeRef::IndexElem(_) => SyntaxKind::IndexElem,
            NodeRef::Constraint(_) => SyntaxKind::Constraint,
            NodeRef::DefElem(_) => SyntaxKind::DefElem,
            NodeRef::RangeTblEntry(_) => SyntaxKind::RangeTblEntry,
            NodeRef::RangeTblFunction(_) => SyntaxKind::RangeTblFunction,
            NodeRef::TableSampleClause(_) => SyntaxKind::TableSampleClause,
            NodeRef::WithCheckOption(_) => SyntaxKind::WithCheckOption,
            NodeRef::SortGroupClause(_) => SyntaxKind::SortGroupClause,
            NodeRef::GroupingSet(_) => SyntaxKind::GroupingSet,
            NodeRef::WindowClause(_) => SyntaxKind::WindowClause,
            NodeRef::ObjectWithArgs(_) => SyntaxKind::ObjectWithArgs,
            NodeRef::AccessPriv(_) => SyntaxKind::AccessPriv,
            NodeRef::CreateOpClassItem(_) => SyntaxKind::CreateOpClassItem,
            NodeRef::TableLikeClause(_) => SyntaxKind::TableLikeClause,
            NodeRef::FunctionParameter(_) => SyntaxKind::FunctionParameter,
            NodeRef::LockingClause(_) => SyntaxKind::LockingClause,
            NodeRef::RowMarkClause(_) => SyntaxKind::RowMarkClause,
            NodeRef::XmlSerialize(_) => SyntaxKind::XmlSerialize,
            NodeRef::WithClause(_) => SyntaxKind::WithClause,
            NodeRef::InferClause(_) => SyntaxKind::InferClause,
            NodeRef::OnConflictClause(_) => SyntaxKind::OnConflictClause,
            NodeRef::CommonTableExpr(_) => SyntaxKind::CommonTableExpr,
            NodeRef::RoleSpec(_) => SyntaxKind::RoleSpec,
            NodeRef::TriggerTransition(_) => SyntaxKind::TriggerTransition,
            NodeRef::PartitionElem(_) => SyntaxKind::PartitionElem,
            NodeRef::PartitionSpec(_) => SyntaxKind::PartitionSpec,
            NodeRef::PartitionBoundSpec(_) => SyntaxKind::PartitionBoundSpec,
            NodeRef::PartitionRangeDatum(_) => SyntaxKind::PartitionRangeDatum,
            NodeRef::PartitionCmd(_) => SyntaxKind::PartitionCmd,
            NodeRef::VacuumRelation(_) => SyntaxKind::VacuumRelation,
            NodeRef::InlineCodeBlock(_) => SyntaxKind::InlineCodeBlock,
            NodeRef::CallContext(_) => SyntaxKind::CallContext,
            NodeRef::Integer(_) => SyntaxKind::Integer,
            NodeRef::Float(_) => SyntaxKind::Float,
            NodeRef::String(_) => SyntaxKind::String,
            NodeRef::BitString(_) => SyntaxKind::BitString,
            // NodeRef::Null(_) => SyntaxKind::Null,
            NodeRef::List(_) => SyntaxKind::List,
            NodeRef::IntList(_) => SyntaxKind::IntList,
            NodeRef::OidList(_) => SyntaxKind::OidList,
            _ => panic!("Unknown node type: {:?}", node),
        }
    }

    /// Converts a `pg_query` ScanToken to a `SyntaxKind`
    /// Can be generated
    pub fn from_pg_query_token(token: &ScanToken) -> Self {
        match token.token {
            0 => SyntaxKind::Nul,
            37 => SyntaxKind::Ascii37,
            40 => SyntaxKind::Ascii40,
            41 => SyntaxKind::Ascii41,
            42 => SyntaxKind::Ascii42,
            43 => SyntaxKind::Ascii43,
            44 => SyntaxKind::Ascii44,
            45 => SyntaxKind::Ascii45,
            46 => SyntaxKind::Ascii46,
            47 => SyntaxKind::Ascii47,
            58 => SyntaxKind::Ascii58,
            59 => SyntaxKind::Ascii59,
            60 => SyntaxKind::Ascii60,
            61 => SyntaxKind::Ascii61,
            62 => SyntaxKind::Ascii62,
            63 => SyntaxKind::Ascii63,
            91 => SyntaxKind::Ascii91,
            92 => SyntaxKind::Ascii92,
            93 => SyntaxKind::Ascii93,
            94 => SyntaxKind::Ascii94,
            258 => SyntaxKind::Ident,
            259 => SyntaxKind::Uident,
            260 => SyntaxKind::Fconst,
            261 => SyntaxKind::Sconst,
            262 => SyntaxKind::Usconst,
            263 => SyntaxKind::Bconst,
            264 => SyntaxKind::Xconst,
            265 => SyntaxKind::Op,
            266 => SyntaxKind::Iconst,
            267 => SyntaxKind::Param,
            268 => SyntaxKind::Typecast,
            269 => SyntaxKind::DotDot,
            270 => SyntaxKind::ColonEquals,
            271 => SyntaxKind::EqualsGreater,
            272 => SyntaxKind::LessEquals,
            273 => SyntaxKind::GreaterEquals,
            274 => SyntaxKind::NotEquals,
            275 => SyntaxKind::SqlComment,
            276 => SyntaxKind::CComment,
            277 => SyntaxKind::AbortP,
            278 => SyntaxKind::AbsoluteP,
            279 => SyntaxKind::Access,
            280 => SyntaxKind::Action,
            281 => SyntaxKind::AddP,
            282 => SyntaxKind::Admin,
            283 => SyntaxKind::After,
            284 => SyntaxKind::Aggregate,
            285 => SyntaxKind::All,
            286 => SyntaxKind::Also,
            287 => SyntaxKind::Alter,
            288 => SyntaxKind::Always,
            289 => SyntaxKind::Analyse,
            290 => SyntaxKind::Analyze,
            291 => SyntaxKind::And,
            292 => SyntaxKind::Any,
            293 => SyntaxKind::Array,
            294 => SyntaxKind::As,
            295 => SyntaxKind::Asc,
            296 => SyntaxKind::Assertion,
            297 => SyntaxKind::Assignment,
            298 => SyntaxKind::Asymmetric,
            299 => SyntaxKind::At,
            300 => SyntaxKind::Attach,
            301 => SyntaxKind::Attribute,
            302 => SyntaxKind::Authorization,
            303 => SyntaxKind::Backward,
            305 => SyntaxKind::BeginP,
            306 => SyntaxKind::Between,
            307 => SyntaxKind::Bigint,
            308 => SyntaxKind::Binary,
            309 => SyntaxKind::Bit,
            310 => SyntaxKind::BooleanP,
            311 => SyntaxKind::Both,
            312 => SyntaxKind::By,
            313 => SyntaxKind::Cache,
            314 => SyntaxKind::Call,
            315 => SyntaxKind::Called,
            316 => SyntaxKind::Cascade,
            317 => SyntaxKind::Cascaded,
            318 => SyntaxKind::Case,
            319 => SyntaxKind::Cast,
            320 => SyntaxKind::CatalogP,
            321 => SyntaxKind::Chain,
            322 => SyntaxKind::CharP,
            323 => SyntaxKind::Character,
            324 => SyntaxKind::Characteristics,
            325 => SyntaxKind::Check,
            326 => SyntaxKind::Checkpoint,
            327 => SyntaxKind::Class,
            328 => SyntaxKind::Close,
            329 => SyntaxKind::Cluster,
            330 => SyntaxKind::Coalesce,
            331 => SyntaxKind::Collate,
            332 => SyntaxKind::Collation,
            333 => SyntaxKind::Column,
            334 => SyntaxKind::Columns,
            335 => SyntaxKind::Comment,
            336 => SyntaxKind::Comments,
            337 => SyntaxKind::Commit,
            338 => SyntaxKind::Committed,
            339 => SyntaxKind::Concurrently,
            340 => SyntaxKind::Configuration,
            341 => SyntaxKind::Conflict,
            342 => SyntaxKind::Connection,
            343 => SyntaxKind::Constraint,
            344 => SyntaxKind::Constraints,
            345 => SyntaxKind::ContentP,
            346 => SyntaxKind::ContinueP,
            347 => SyntaxKind::ConversionP,
            348 => SyntaxKind::Copy,
            349 => SyntaxKind::Cost,
            350 => SyntaxKind::Create,
            351 => SyntaxKind::Cross,
            352 => SyntaxKind::Csv,
            353 => SyntaxKind::Cube,
            354 => SyntaxKind::CurrentP,
            355 => SyntaxKind::CurrentCatalog,
            356 => SyntaxKind::CurrentDate,
            357 => SyntaxKind::CurrentRole,
            358 => SyntaxKind::CurrentSchema,
            359 => SyntaxKind::CurrentTime,
            360 => SyntaxKind::CurrentTimestamp,
            361 => SyntaxKind::CurrentUser,
            362 => SyntaxKind::Cursor,
            363 => SyntaxKind::Cycle,
            364 => SyntaxKind::DataP,
            365 => SyntaxKind::Database,
            366 => SyntaxKind::DayP,
            367 => SyntaxKind::Deallocate,
            368 => SyntaxKind::Dec,
            369 => SyntaxKind::DecimalP,
            370 => SyntaxKind::Declare,
            371 => SyntaxKind::Default,
            372 => SyntaxKind::Defaults,
            373 => SyntaxKind::Deferrable,
            374 => SyntaxKind::Deferred,
            375 => SyntaxKind::Definer,
            376 => SyntaxKind::DeleteP,
            377 => SyntaxKind::Delimiter,
            378 => SyntaxKind::Delimiters,
            379 => SyntaxKind::Depends,
            380 => SyntaxKind::Desc,
            381 => SyntaxKind::Detach,
            382 => SyntaxKind::Dictionary,
            383 => SyntaxKind::DisableP,
            384 => SyntaxKind::Discard,
            385 => SyntaxKind::Distinct,
            386 => SyntaxKind::Do,
            387 => SyntaxKind::DocumentP,
            388 => SyntaxKind::DomainP,
            389 => SyntaxKind::DoubleP,
            390 => SyntaxKind::Drop,
            391 => SyntaxKind::Each,
            392 => SyntaxKind::Else,
            393 => SyntaxKind::EnableP,
            394 => SyntaxKind::Encoding,
            395 => SyntaxKind::Encrypted,
            396 => SyntaxKind::EndP,
            397 => SyntaxKind::EnumP,
            398 => SyntaxKind::Escape,
            399 => SyntaxKind::Event,
            400 => SyntaxKind::Except,
            401 => SyntaxKind::Exclude,
            402 => SyntaxKind::Excluding,
            403 => SyntaxKind::Exclusive,
            404 => SyntaxKind::Execute,
            405 => SyntaxKind::Exists,
            406 => SyntaxKind::Explain,
            407 => SyntaxKind::Expression,
            408 => SyntaxKind::Extension,
            409 => SyntaxKind::External,
            410 => SyntaxKind::Extract,
            411 => SyntaxKind::FalseP,
            412 => SyntaxKind::Family,
            413 => SyntaxKind::Fetch,
            414 => SyntaxKind::Filter,
            415 => SyntaxKind::FirstP,
            416 => SyntaxKind::FloatP,
            417 => SyntaxKind::Following,
            418 => SyntaxKind::For,
            419 => SyntaxKind::Force,
            420 => SyntaxKind::Foreign,
            421 => SyntaxKind::Forward,
            422 => SyntaxKind::Freeze,
            423 => SyntaxKind::From,
            424 => SyntaxKind::Full,
            425 => SyntaxKind::Function,
            426 => SyntaxKind::Functions,
            427 => SyntaxKind::Generated,
            428 => SyntaxKind::Global,
            429 => SyntaxKind::Grant,
            430 => SyntaxKind::Granted,
            431 => SyntaxKind::Greatest,
            432 => SyntaxKind::GroupP,
            433 => SyntaxKind::Grouping,
            434 => SyntaxKind::Groups,
            435 => SyntaxKind::Handler,
            436 => SyntaxKind::Having,
            437 => SyntaxKind::HeaderP,
            438 => SyntaxKind::Hold,
            439 => SyntaxKind::HourP,
            440 => SyntaxKind::IdentityP,
            441 => SyntaxKind::IfP,
            442 => SyntaxKind::Ilike,
            443 => SyntaxKind::Immediate,
            444 => SyntaxKind::Immutable,
            445 => SyntaxKind::ImplicitP,
            446 => SyntaxKind::ImportP,
            447 => SyntaxKind::InP,
            448 => SyntaxKind::Include,
            449 => SyntaxKind::Including,
            450 => SyntaxKind::Increment,
            451 => SyntaxKind::Index,
            452 => SyntaxKind::Indexes,
            453 => SyntaxKind::Inherit,
            454 => SyntaxKind::Inherits,
            455 => SyntaxKind::Initially,
            456 => SyntaxKind::InlineP,
            457 => SyntaxKind::InnerP,
            458 => SyntaxKind::Inout,
            459 => SyntaxKind::InputP,
            460 => SyntaxKind::Insensitive,
            461 => SyntaxKind::Insert,
            462 => SyntaxKind::Instead,
            463 => SyntaxKind::IntP,
            464 => SyntaxKind::Integer,
            465 => SyntaxKind::Intersect,
            466 => SyntaxKind::Interval,
            467 => SyntaxKind::Into,
            468 => SyntaxKind::Invoker,
            469 => SyntaxKind::Is,
            470 => SyntaxKind::Isnull,
            471 => SyntaxKind::Isolation,
            472 => SyntaxKind::Join,
            473 => SyntaxKind::Key,
            474 => SyntaxKind::Label,
            475 => SyntaxKind::Language,
            476 => SyntaxKind::LargeP,
            477 => SyntaxKind::LastP,
            478 => SyntaxKind::LateralP,
            479 => SyntaxKind::Leading,
            480 => SyntaxKind::Leakproof,
            481 => SyntaxKind::Least,
            482 => SyntaxKind::Left,
            483 => SyntaxKind::Level,
            484 => SyntaxKind::Like,
            485 => SyntaxKind::Limit,
            486 => SyntaxKind::Listen,
            487 => SyntaxKind::Load,
            488 => SyntaxKind::Local,
            489 => SyntaxKind::Localtime,
            490 => SyntaxKind::Localtimestamp,
            491 => SyntaxKind::Location,
            492 => SyntaxKind::LockP,
            493 => SyntaxKind::Locked,
            494 => SyntaxKind::Logged,
            495 => SyntaxKind::Mapping,
            496 => SyntaxKind::Match,
            497 => SyntaxKind::Materialized,
            498 => SyntaxKind::Maxvalue,
            499 => SyntaxKind::Method,
            500 => SyntaxKind::MinuteP,
            501 => SyntaxKind::Minvalue,
            502 => SyntaxKind::Mode,
            503 => SyntaxKind::MonthP,
            504 => SyntaxKind::Move,
            505 => SyntaxKind::NameP,
            506 => SyntaxKind::Names,
            507 => SyntaxKind::National,
            508 => SyntaxKind::Natural,
            509 => SyntaxKind::Nchar,
            510 => SyntaxKind::New,
            511 => SyntaxKind::Next,
            512 => SyntaxKind::Nfc,
            513 => SyntaxKind::Nfd,
            514 => SyntaxKind::Nfkc,
            515 => SyntaxKind::Nfkd,
            516 => SyntaxKind::No,
            517 => SyntaxKind::None,
            518 => SyntaxKind::Normalize,
            519 => SyntaxKind::Normalized,
            520 => SyntaxKind::Not,
            521 => SyntaxKind::Nothing,
            522 => SyntaxKind::Notify,
            523 => SyntaxKind::Notnull,
            524 => SyntaxKind::Nowait,
            525 => SyntaxKind::NullP,
            526 => SyntaxKind::Nullif,
            527 => SyntaxKind::NullsP,
            528 => SyntaxKind::Numeric,
            529 => SyntaxKind::ObjectP,
            530 => SyntaxKind::Of,
            531 => SyntaxKind::Off,
            532 => SyntaxKind::Offset,
            533 => SyntaxKind::Oids,
            534 => SyntaxKind::Old,
            535 => SyntaxKind::On,
            536 => SyntaxKind::Only,
            537 => SyntaxKind::Operator,
            538 => SyntaxKind::Option,
            539 => SyntaxKind::Options,
            540 => SyntaxKind::Or,
            541 => SyntaxKind::Order,
            542 => SyntaxKind::Ordinality,
            543 => SyntaxKind::Others,
            544 => SyntaxKind::OutP,
            545 => SyntaxKind::OuterP,
            546 => SyntaxKind::Over,
            547 => SyntaxKind::Overlaps,
            548 => SyntaxKind::Overlay,
            549 => SyntaxKind::Overriding,
            550 => SyntaxKind::Owned,
            551 => SyntaxKind::Owner,
            552 => SyntaxKind::Parallel,
            553 => SyntaxKind::Parser,
            554 => SyntaxKind::Partial,
            555 => SyntaxKind::Partition,
            556 => SyntaxKind::Passing,
            557 => SyntaxKind::Password,
            558 => SyntaxKind::Placing,
            559 => SyntaxKind::Plans,
            560 => SyntaxKind::Policy,
            561 => SyntaxKind::Position,
            562 => SyntaxKind::Preceding,
            563 => SyntaxKind::Precision,
            564 => SyntaxKind::Preserve,
            565 => SyntaxKind::Prepare,
            566 => SyntaxKind::Prepared,
            567 => SyntaxKind::Primary,
            568 => SyntaxKind::Prior,
            569 => SyntaxKind::Privileges,
            570 => SyntaxKind::Procedural,
            571 => SyntaxKind::Procedure,
            572 => SyntaxKind::Procedures,
            573 => SyntaxKind::Program,
            574 => SyntaxKind::Publication,
            575 => SyntaxKind::Quote,
            576 => SyntaxKind::Range,
            577 => SyntaxKind::Read,
            578 => SyntaxKind::Real,
            579 => SyntaxKind::Reassign,
            580 => SyntaxKind::Recheck,
            581 => SyntaxKind::Recursive,
            582 => SyntaxKind::Ref,
            583 => SyntaxKind::References,
            584 => SyntaxKind::Referencing,
            585 => SyntaxKind::Refresh,
            586 => SyntaxKind::Reindex,
            587 => SyntaxKind::RelativeP,
            588 => SyntaxKind::Release,
            589 => SyntaxKind::Rename,
            590 => SyntaxKind::Repeatable,
            591 => SyntaxKind::Replace,
            592 => SyntaxKind::Replica,
            593 => SyntaxKind::Reset,
            594 => SyntaxKind::Restart,
            595 => SyntaxKind::Restrict,
            596 => SyntaxKind::Returning,
            597 => SyntaxKind::Returns,
            598 => SyntaxKind::Revoke,
            599 => SyntaxKind::Right,
            600 => SyntaxKind::Role,
            601 => SyntaxKind::Rollback,
            602 => SyntaxKind::Rollup,
            603 => SyntaxKind::Routine,
            604 => SyntaxKind::Routines,
            605 => SyntaxKind::Row,
            606 => SyntaxKind::Rows,
            607 => SyntaxKind::Rule,
            608 => SyntaxKind::Savepoint,
            609 => SyntaxKind::Schema,
            610 => SyntaxKind::Schemas,
            611 => SyntaxKind::Scroll,
            612 => SyntaxKind::Search,
            613 => SyntaxKind::SecondP,
            614 => SyntaxKind::Security,
            615 => SyntaxKind::Select,
            616 => SyntaxKind::Sequence,
            617 => SyntaxKind::Sequences,
            618 => SyntaxKind::Serializable,
            619 => SyntaxKind::Server,
            620 => SyntaxKind::Session,
            621 => SyntaxKind::SessionUser,
            622 => SyntaxKind::Set,
            623 => SyntaxKind::Sets,
            624 => SyntaxKind::Setof,
            625 => SyntaxKind::Share,
            626 => SyntaxKind::Show,
            627 => SyntaxKind::Similar,
            628 => SyntaxKind::Simple,
            629 => SyntaxKind::Skip,
            630 => SyntaxKind::Smallint,
            631 => SyntaxKind::Snapshot,
            632 => SyntaxKind::Some,
            633 => SyntaxKind::SqlP,
            634 => SyntaxKind::Stable,
            635 => SyntaxKind::StandaloneP,
            636 => SyntaxKind::Start,
            637 => SyntaxKind::Statement,
            638 => SyntaxKind::Statistics,
            639 => SyntaxKind::Stdin,
            640 => SyntaxKind::Stdout,
            641 => SyntaxKind::Storage,
            642 => SyntaxKind::Stored,
            643 => SyntaxKind::StrictP,
            644 => SyntaxKind::StripP,
            645 => SyntaxKind::Subscription,
            646 => SyntaxKind::Substring,
            647 => SyntaxKind::Support,
            648 => SyntaxKind::Symmetric,
            649 => SyntaxKind::Sysid,
            650 => SyntaxKind::SystemP,
            651 => SyntaxKind::Table,
            652 => SyntaxKind::Tables,
            653 => SyntaxKind::Tablesample,
            654 => SyntaxKind::Tablespace,
            655 => SyntaxKind::Temp,
            656 => SyntaxKind::Template,
            657 => SyntaxKind::Temporary,
            658 => SyntaxKind::TextP,
            659 => SyntaxKind::Then,
            660 => SyntaxKind::Ties,
            661 => SyntaxKind::Time,
            662 => SyntaxKind::Timestamp,
            663 => SyntaxKind::To,
            664 => SyntaxKind::Trailing,
            665 => SyntaxKind::Transaction,
            666 => SyntaxKind::Transform,
            667 => SyntaxKind::Treat,
            668 => SyntaxKind::Trigger,
            669 => SyntaxKind::Trim,
            670 => SyntaxKind::TrueP,
            671 => SyntaxKind::Truncate,
            672 => SyntaxKind::Trusted,
            673 => SyntaxKind::TypeP,
            674 => SyntaxKind::TypesP,
            675 => SyntaxKind::Uescape,
            676 => SyntaxKind::Unbounded,
            677 => SyntaxKind::Uncommitted,
            678 => SyntaxKind::Unencrypted,
            679 => SyntaxKind::Union,
            680 => SyntaxKind::Unique,
            681 => SyntaxKind::Unknown,
            682 => SyntaxKind::Unlisten,
            683 => SyntaxKind::Unlogged,
            684 => SyntaxKind::Until,
            685 => SyntaxKind::Update,
            686 => SyntaxKind::User,
            687 => SyntaxKind::Using,
            688 => SyntaxKind::Vacuum,
            689 => SyntaxKind::Valid,
            690 => SyntaxKind::Validate,
            691 => SyntaxKind::Validator,
            692 => SyntaxKind::ValueP,
            693 => SyntaxKind::Values,
            694 => SyntaxKind::Varchar,
            695 => SyntaxKind::Variadic,
            696 => SyntaxKind::Varying,
            697 => SyntaxKind::Verbose,
            698 => SyntaxKind::VersionP,
            699 => SyntaxKind::View,
            700 => SyntaxKind::Views,
            701 => SyntaxKind::Volatile,
            702 => SyntaxKind::When,
            703 => SyntaxKind::Where,
            704 => SyntaxKind::WhitespaceP,
            705 => SyntaxKind::Window,
            706 => SyntaxKind::With,
            707 => SyntaxKind::Within,
            708 => SyntaxKind::Without,
            709 => SyntaxKind::Work,
            710 => SyntaxKind::Wrapper,
            711 => SyntaxKind::Write,
            712 => SyntaxKind::XmlP,
            713 => SyntaxKind::Xmlattributes,
            714 => SyntaxKind::Xmlconcat,
            715 => SyntaxKind::Xmlelement,
            716 => SyntaxKind::Xmlexists,
            717 => SyntaxKind::Xmlforest,
            718 => SyntaxKind::Xmlnamespaces,
            719 => SyntaxKind::Xmlparse,
            720 => SyntaxKind::Xmlpi,
            721 => SyntaxKind::Xmlroot,
            722 => SyntaxKind::Xmlserialize,
            723 => SyntaxKind::Xmltable,
            724 => SyntaxKind::YearP,
            725 => SyntaxKind::YesP,
            726 => SyntaxKind::Zone,
            727 => SyntaxKind::NotLa,
            728 => SyntaxKind::NullsLa,
            729 => SyntaxKind::WithLa,
            730 => SyntaxKind::Postfixop,
            731 => SyntaxKind::Uminus,
            _ => panic!("Unknown StatementToken: {:?}", token),
        }
    }

    /// Returns the `SyntaxKindType` of a `SyntaxKind`
    /// Maybe this can be generated from the ScanToken type in pg_query.rs
    pub fn get_type(&self) -> Option<SyntaxKindType> {
        match self {
            SyntaxKind::Newline => Some(SyntaxKindType::Follow),
            SyntaxKind::Whitespace => Some(SyntaxKindType::Follow),
            SyntaxKind::Nul => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii37 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii40 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii41 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii42 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii43 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii44 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii45 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii46 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii47 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii58 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii59 => Some(SyntaxKindType::Close),
            SyntaxKind::Ascii60 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii61 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii62 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii63 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii91 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii92 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii93 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii94 => Some(SyntaxKindType::Follow),
            SyntaxKind::Uident => Some(SyntaxKindType::Follow),
            SyntaxKind::Fconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Sconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Usconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Bconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Xconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Op => Some(SyntaxKindType::Follow),
            SyntaxKind::Iconst => Some(SyntaxKindType::Follow),
            SyntaxKind::Typecast => Some(SyntaxKindType::Follow),
            SyntaxKind::DotDot => Some(SyntaxKindType::Follow),
            SyntaxKind::ColonEquals => Some(SyntaxKindType::Follow),
            SyntaxKind::EqualsGreater => Some(SyntaxKindType::Follow),
            SyntaxKind::LessEquals => Some(SyntaxKindType::Follow),
            SyntaxKind::GreaterEquals => Some(SyntaxKindType::Follow),
            SyntaxKind::NotEquals => Some(SyntaxKindType::Follow),
            SyntaxKind::SqlComment => Some(SyntaxKindType::Follow),
            SyntaxKind::CComment => Some(SyntaxKindType::Follow),
            SyntaxKind::AbortP => Some(SyntaxKindType::Follow),
            SyntaxKind::AbsoluteP => Some(SyntaxKindType::Follow),
            SyntaxKind::Access => Some(SyntaxKindType::Follow),
            SyntaxKind::Action => Some(SyntaxKindType::Follow),
            SyntaxKind::AddP => Some(SyntaxKindType::Follow),
            SyntaxKind::Admin => Some(SyntaxKindType::Follow),
            SyntaxKind::After => Some(SyntaxKindType::Follow),
            SyntaxKind::Aggregate => Some(SyntaxKindType::Follow),
            SyntaxKind::All => Some(SyntaxKindType::Follow),
            SyntaxKind::Also => Some(SyntaxKindType::Follow),
            SyntaxKind::Alter => Some(SyntaxKindType::Follow),
            SyntaxKind::Always => Some(SyntaxKindType::Follow),
            SyntaxKind::Analyse => Some(SyntaxKindType::Follow),
            SyntaxKind::Analyze => Some(SyntaxKindType::Follow),
            SyntaxKind::And => Some(SyntaxKindType::Follow),
            SyntaxKind::Any => Some(SyntaxKindType::Follow),
            SyntaxKind::Array => Some(SyntaxKindType::Follow),
            SyntaxKind::As => Some(SyntaxKindType::Follow),
            SyntaxKind::Asc => Some(SyntaxKindType::Follow),
            SyntaxKind::Assertion => Some(SyntaxKindType::Follow),
            SyntaxKind::Assignment => Some(SyntaxKindType::Follow),
            SyntaxKind::Asymmetric => Some(SyntaxKindType::Follow),
            SyntaxKind::At => Some(SyntaxKindType::Follow),
            SyntaxKind::Attach => Some(SyntaxKindType::Follow),
            SyntaxKind::Attribute => Some(SyntaxKindType::Follow),
            SyntaxKind::Authorization => Some(SyntaxKindType::Follow),
            SyntaxKind::Backward => Some(SyntaxKindType::Follow),
            SyntaxKind::Before => Some(SyntaxKindType::Follow),
            SyntaxKind::BeginP => Some(SyntaxKindType::Follow),
            SyntaxKind::Between => Some(SyntaxKindType::Follow),
            SyntaxKind::Bigint => Some(SyntaxKindType::Follow),
            SyntaxKind::Binary => Some(SyntaxKindType::Follow),
            SyntaxKind::Bit => Some(SyntaxKindType::Follow),
            SyntaxKind::BooleanP => Some(SyntaxKindType::Follow),
            SyntaxKind::Both => Some(SyntaxKindType::Follow),
            SyntaxKind::By => Some(SyntaxKindType::Follow),
            SyntaxKind::Cache => Some(SyntaxKindType::Follow),
            SyntaxKind::Call => Some(SyntaxKindType::Follow),
            SyntaxKind::Called => Some(SyntaxKindType::Follow),
            SyntaxKind::Cascade => Some(SyntaxKindType::Follow),
            SyntaxKind::Cascaded => Some(SyntaxKindType::Follow),
            SyntaxKind::Case => Some(SyntaxKindType::Follow),
            SyntaxKind::Cast => Some(SyntaxKindType::Follow),
            SyntaxKind::CatalogP => Some(SyntaxKindType::Follow),
            SyntaxKind::Chain => Some(SyntaxKindType::Follow),
            SyntaxKind::CharP => Some(SyntaxKindType::Follow),
            SyntaxKind::Character => Some(SyntaxKindType::Follow),
            SyntaxKind::Characteristics => Some(SyntaxKindType::Follow),
            SyntaxKind::Check => Some(SyntaxKindType::Follow),
            SyntaxKind::Checkpoint => Some(SyntaxKindType::Follow),
            SyntaxKind::Class => Some(SyntaxKindType::Follow),
            SyntaxKind::Close => Some(SyntaxKindType::Follow),
            SyntaxKind::Cluster => Some(SyntaxKindType::Follow),
            SyntaxKind::Coalesce => Some(SyntaxKindType::Follow),
            SyntaxKind::Collate => Some(SyntaxKindType::Follow),
            SyntaxKind::Collation => Some(SyntaxKindType::Follow),
            SyntaxKind::Column => Some(SyntaxKindType::Follow),
            SyntaxKind::Columns => Some(SyntaxKindType::Follow),
            SyntaxKind::Comments => Some(SyntaxKindType::Follow),
            SyntaxKind::Commit => Some(SyntaxKindType::Follow),
            SyntaxKind::Committed => Some(SyntaxKindType::Follow),
            SyntaxKind::Concurrently => Some(SyntaxKindType::Follow),
            SyntaxKind::Configuration => Some(SyntaxKindType::Follow),
            SyntaxKind::Conflict => Some(SyntaxKindType::Follow),
            SyntaxKind::Connection => Some(SyntaxKindType::Follow),
            SyntaxKind::Constraints => Some(SyntaxKindType::Follow),
            SyntaxKind::ContentP => Some(SyntaxKindType::Follow),
            SyntaxKind::ContinueP => Some(SyntaxKindType::Follow),
            SyntaxKind::ConversionP => Some(SyntaxKindType::Follow),
            SyntaxKind::Copy => Some(SyntaxKindType::Follow),
            SyntaxKind::Cost => Some(SyntaxKindType::Follow),
            SyntaxKind::Create => Some(SyntaxKindType::Follow),
            SyntaxKind::Cross => Some(SyntaxKindType::Follow),
            SyntaxKind::Csv => Some(SyntaxKindType::Follow),
            SyntaxKind::Cube => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentP => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentCatalog => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentDate => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentRole => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentSchema => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentTime => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentTimestamp => Some(SyntaxKindType::Follow),
            SyntaxKind::CurrentUser => Some(SyntaxKindType::Follow),
            SyntaxKind::Cursor => Some(SyntaxKindType::Follow),
            SyntaxKind::Cycle => Some(SyntaxKindType::Follow),
            SyntaxKind::DataP => Some(SyntaxKindType::Follow),
            SyntaxKind::Database => Some(SyntaxKindType::Follow),
            SyntaxKind::DayP => Some(SyntaxKindType::Follow),
            SyntaxKind::Deallocate => Some(SyntaxKindType::Follow),
            SyntaxKind::Dec => Some(SyntaxKindType::Follow),
            SyntaxKind::DecimalP => Some(SyntaxKindType::Follow),
            SyntaxKind::Declare => Some(SyntaxKindType::Follow),
            SyntaxKind::Default => Some(SyntaxKindType::Follow),
            SyntaxKind::Defaults => Some(SyntaxKindType::Follow),
            SyntaxKind::Deferrable => Some(SyntaxKindType::Follow),
            SyntaxKind::Deferred => Some(SyntaxKindType::Follow),
            SyntaxKind::Definer => Some(SyntaxKindType::Follow),
            SyntaxKind::DeleteP => Some(SyntaxKindType::Follow),
            SyntaxKind::Delimiter => Some(SyntaxKindType::Follow),
            SyntaxKind::Delimiters => Some(SyntaxKindType::Follow),
            SyntaxKind::Depends => Some(SyntaxKindType::Follow),
            SyntaxKind::Desc => Some(SyntaxKindType::Follow),
            SyntaxKind::Detach => Some(SyntaxKindType::Follow),
            SyntaxKind::Dictionary => Some(SyntaxKindType::Follow),
            SyntaxKind::DisableP => Some(SyntaxKindType::Follow),
            SyntaxKind::Discard => Some(SyntaxKindType::Follow),
            SyntaxKind::Distinct => Some(SyntaxKindType::Follow),
            SyntaxKind::Do => Some(SyntaxKindType::Follow),
            SyntaxKind::DocumentP => Some(SyntaxKindType::Follow),
            SyntaxKind::DomainP => Some(SyntaxKindType::Follow),
            SyntaxKind::DoubleP => Some(SyntaxKindType::Follow),
            SyntaxKind::Drop => Some(SyntaxKindType::Follow),
            SyntaxKind::Each => Some(SyntaxKindType::Follow),
            SyntaxKind::Else => Some(SyntaxKindType::Follow),
            SyntaxKind::EnableP => Some(SyntaxKindType::Follow),
            SyntaxKind::Encoding => Some(SyntaxKindType::Follow),
            SyntaxKind::Encrypted => Some(SyntaxKindType::Follow),
            SyntaxKind::EndP => Some(SyntaxKindType::Follow),
            SyntaxKind::EnumP => Some(SyntaxKindType::Follow),
            SyntaxKind::Escape => Some(SyntaxKindType::Follow),
            SyntaxKind::Event => Some(SyntaxKindType::Follow),
            SyntaxKind::Except => Some(SyntaxKindType::Follow),
            SyntaxKind::Exclude => Some(SyntaxKindType::Follow),
            SyntaxKind::Excluding => Some(SyntaxKindType::Follow),
            SyntaxKind::Exclusive => Some(SyntaxKindType::Follow),
            SyntaxKind::Execute => Some(SyntaxKindType::Follow),
            SyntaxKind::Exists => Some(SyntaxKindType::Follow),
            SyntaxKind::Explain => Some(SyntaxKindType::Follow),
            SyntaxKind::Expression => Some(SyntaxKindType::Follow),
            SyntaxKind::Extension => Some(SyntaxKindType::Follow),
            SyntaxKind::External => Some(SyntaxKindType::Follow),
            SyntaxKind::Extract => Some(SyntaxKindType::Follow),
            SyntaxKind::FalseP => Some(SyntaxKindType::Follow),
            SyntaxKind::Family => Some(SyntaxKindType::Follow),
            SyntaxKind::Fetch => Some(SyntaxKindType::Follow),
            SyntaxKind::Filter => Some(SyntaxKindType::Follow),
            SyntaxKind::FirstP => Some(SyntaxKindType::Follow),
            SyntaxKind::FloatP => Some(SyntaxKindType::Follow),
            SyntaxKind::Following => Some(SyntaxKindType::Follow),
            SyntaxKind::For => Some(SyntaxKindType::Follow),
            SyntaxKind::Force => Some(SyntaxKindType::Follow),
            SyntaxKind::Foreign => Some(SyntaxKindType::Follow),
            SyntaxKind::Forward => Some(SyntaxKindType::Follow),
            SyntaxKind::Freeze => Some(SyntaxKindType::Follow),
            SyntaxKind::From => Some(SyntaxKindType::Follow),
            SyntaxKind::Full => Some(SyntaxKindType::Follow),
            SyntaxKind::Function => Some(SyntaxKindType::Follow),
            SyntaxKind::Functions => Some(SyntaxKindType::Follow),
            SyntaxKind::Generated => Some(SyntaxKindType::Follow),
            SyntaxKind::Global => Some(SyntaxKindType::Follow),
            SyntaxKind::Grant => Some(SyntaxKindType::Follow),
            SyntaxKind::Granted => Some(SyntaxKindType::Follow),
            SyntaxKind::Greatest => Some(SyntaxKindType::Follow),
            SyntaxKind::GroupP => Some(SyntaxKindType::Follow),
            SyntaxKind::Grouping => Some(SyntaxKindType::Follow),
            SyntaxKind::Groups => Some(SyntaxKindType::Follow),
            SyntaxKind::Handler => Some(SyntaxKindType::Follow),
            SyntaxKind::Having => Some(SyntaxKindType::Follow),
            SyntaxKind::HeaderP => Some(SyntaxKindType::Follow),
            SyntaxKind::Hold => Some(SyntaxKindType::Follow),
            SyntaxKind::HourP => Some(SyntaxKindType::Follow),
            SyntaxKind::IdentityP => Some(SyntaxKindType::Follow),
            SyntaxKind::IfP => Some(SyntaxKindType::Follow),
            SyntaxKind::Ilike => Some(SyntaxKindType::Follow),
            SyntaxKind::Immediate => Some(SyntaxKindType::Follow),
            SyntaxKind::Immutable => Some(SyntaxKindType::Follow),
            SyntaxKind::ImplicitP => Some(SyntaxKindType::Follow),
            SyntaxKind::ImportP => Some(SyntaxKindType::Follow),
            SyntaxKind::InP => Some(SyntaxKindType::Follow),
            SyntaxKind::Include => Some(SyntaxKindType::Follow),
            SyntaxKind::Including => Some(SyntaxKindType::Follow),
            SyntaxKind::Increment => Some(SyntaxKindType::Follow),
            SyntaxKind::Index => Some(SyntaxKindType::Follow),
            SyntaxKind::Indexes => Some(SyntaxKindType::Follow),
            SyntaxKind::Inherit => Some(SyntaxKindType::Follow),
            SyntaxKind::Inherits => Some(SyntaxKindType::Follow),
            SyntaxKind::Initially => Some(SyntaxKindType::Follow),
            SyntaxKind::InlineP => Some(SyntaxKindType::Follow),
            SyntaxKind::InnerP => Some(SyntaxKindType::Follow),
            SyntaxKind::Inout => Some(SyntaxKindType::Follow),
            SyntaxKind::InputP => Some(SyntaxKindType::Follow),
            SyntaxKind::Insensitive => Some(SyntaxKindType::Follow),
            SyntaxKind::Insert => Some(SyntaxKindType::Follow),
            SyntaxKind::Instead => Some(SyntaxKindType::Follow),
            SyntaxKind::IntP => Some(SyntaxKindType::Follow),
            SyntaxKind::Integer => Some(SyntaxKindType::Follow),
            SyntaxKind::Intersect => Some(SyntaxKindType::Follow),
            SyntaxKind::Interval => Some(SyntaxKindType::Follow),
            SyntaxKind::Into => Some(SyntaxKindType::Follow),
            SyntaxKind::Invoker => Some(SyntaxKindType::Follow),
            SyntaxKind::Is => Some(SyntaxKindType::Follow),
            SyntaxKind::Isnull => Some(SyntaxKindType::Follow),
            SyntaxKind::Isolation => Some(SyntaxKindType::Follow),
            SyntaxKind::Join => Some(SyntaxKindType::Follow),
            SyntaxKind::Key => Some(SyntaxKindType::Follow),
            SyntaxKind::Label => Some(SyntaxKindType::Follow),
            SyntaxKind::Language => Some(SyntaxKindType::Follow),
            SyntaxKind::LargeP => Some(SyntaxKindType::Follow),
            SyntaxKind::LastP => Some(SyntaxKindType::Follow),
            SyntaxKind::LateralP => Some(SyntaxKindType::Follow),
            SyntaxKind::Leading => Some(SyntaxKindType::Follow),
            SyntaxKind::Leakproof => Some(SyntaxKindType::Follow),
            SyntaxKind::Least => Some(SyntaxKindType::Follow),
            SyntaxKind::Left => Some(SyntaxKindType::Follow),
            SyntaxKind::Level => Some(SyntaxKindType::Follow),
            SyntaxKind::Like => Some(SyntaxKindType::Follow),
            SyntaxKind::Limit => Some(SyntaxKindType::Follow),
            SyntaxKind::Listen => Some(SyntaxKindType::Follow),
            SyntaxKind::Load => Some(SyntaxKindType::Follow),
            SyntaxKind::Local => Some(SyntaxKindType::Follow),
            SyntaxKind::Localtime => Some(SyntaxKindType::Follow),
            SyntaxKind::Localtimestamp => Some(SyntaxKindType::Follow),
            SyntaxKind::Location => Some(SyntaxKindType::Follow),
            SyntaxKind::LockP => Some(SyntaxKindType::Follow),
            SyntaxKind::Locked => Some(SyntaxKindType::Follow),
            SyntaxKind::Logged => Some(SyntaxKindType::Follow),
            SyntaxKind::Mapping => Some(SyntaxKindType::Follow),
            SyntaxKind::Match => Some(SyntaxKindType::Follow),
            SyntaxKind::Materialized => Some(SyntaxKindType::Follow),
            SyntaxKind::Maxvalue => Some(SyntaxKindType::Follow),
            SyntaxKind::Method => Some(SyntaxKindType::Follow),
            SyntaxKind::MinuteP => Some(SyntaxKindType::Follow),
            SyntaxKind::Minvalue => Some(SyntaxKindType::Follow),
            SyntaxKind::Mode => Some(SyntaxKindType::Follow),
            SyntaxKind::MonthP => Some(SyntaxKindType::Follow),
            SyntaxKind::Move => Some(SyntaxKindType::Follow),
            SyntaxKind::NameP => Some(SyntaxKindType::Follow),
            SyntaxKind::Names => Some(SyntaxKindType::Follow),
            SyntaxKind::National => Some(SyntaxKindType::Follow),
            SyntaxKind::Natural => Some(SyntaxKindType::Follow),
            SyntaxKind::Nchar => Some(SyntaxKindType::Follow),
            SyntaxKind::New => Some(SyntaxKindType::Follow),
            SyntaxKind::Next => Some(SyntaxKindType::Follow),
            SyntaxKind::Nfc => Some(SyntaxKindType::Follow),
            SyntaxKind::Nfd => Some(SyntaxKindType::Follow),
            SyntaxKind::Nfkc => Some(SyntaxKindType::Follow),
            SyntaxKind::Nfkd => Some(SyntaxKindType::Follow),
            SyntaxKind::No => Some(SyntaxKindType::Follow),
            SyntaxKind::None => Some(SyntaxKindType::Follow),
            SyntaxKind::Normalize => Some(SyntaxKindType::Follow),
            SyntaxKind::Normalized => Some(SyntaxKindType::Follow),
            SyntaxKind::Not => Some(SyntaxKindType::Follow),
            SyntaxKind::Nothing => Some(SyntaxKindType::Follow),
            SyntaxKind::Notify => Some(SyntaxKindType::Follow),
            SyntaxKind::Notnull => Some(SyntaxKindType::Follow),
            SyntaxKind::Nowait => Some(SyntaxKindType::Follow),
            SyntaxKind::NullP => Some(SyntaxKindType::Follow),
            SyntaxKind::Nullif => Some(SyntaxKindType::Follow),
            SyntaxKind::NullsP => Some(SyntaxKindType::Follow),
            SyntaxKind::Numeric => Some(SyntaxKindType::Follow),
            SyntaxKind::ObjectP => Some(SyntaxKindType::Follow),
            SyntaxKind::Of => Some(SyntaxKindType::Follow),
            SyntaxKind::Off => Some(SyntaxKindType::Follow),
            SyntaxKind::Offset => Some(SyntaxKindType::Follow),
            SyntaxKind::Oids => Some(SyntaxKindType::Follow),
            SyntaxKind::Old => Some(SyntaxKindType::Follow),
            SyntaxKind::On => Some(SyntaxKindType::Follow),
            SyntaxKind::Only => Some(SyntaxKindType::Follow),
            SyntaxKind::Operator => Some(SyntaxKindType::Follow),
            SyntaxKind::Option => Some(SyntaxKindType::Follow),
            SyntaxKind::Options => Some(SyntaxKindType::Follow),
            SyntaxKind::Or => Some(SyntaxKindType::Follow),
            SyntaxKind::Order => Some(SyntaxKindType::Follow),
            SyntaxKind::Ordinality => Some(SyntaxKindType::Follow),
            SyntaxKind::Others => Some(SyntaxKindType::Follow),
            SyntaxKind::OutP => Some(SyntaxKindType::Follow),
            SyntaxKind::OuterP => Some(SyntaxKindType::Follow),
            SyntaxKind::Over => Some(SyntaxKindType::Follow),
            SyntaxKind::Overlaps => Some(SyntaxKindType::Follow),
            SyntaxKind::Overlay => Some(SyntaxKindType::Follow),
            SyntaxKind::Overriding => Some(SyntaxKindType::Follow),
            SyntaxKind::Owned => Some(SyntaxKindType::Follow),
            SyntaxKind::Owner => Some(SyntaxKindType::Follow),
            SyntaxKind::Parallel => Some(SyntaxKindType::Follow),
            SyntaxKind::Parser => Some(SyntaxKindType::Follow),
            SyntaxKind::Partial => Some(SyntaxKindType::Follow),
            SyntaxKind::Partition => Some(SyntaxKindType::Follow),
            SyntaxKind::Passing => Some(SyntaxKindType::Follow),
            SyntaxKind::Password => Some(SyntaxKindType::Follow),
            SyntaxKind::Placing => Some(SyntaxKindType::Follow),
            SyntaxKind::Plans => Some(SyntaxKindType::Follow),
            SyntaxKind::Policy => Some(SyntaxKindType::Follow),
            SyntaxKind::Position => Some(SyntaxKindType::Follow),
            SyntaxKind::Preceding => Some(SyntaxKindType::Follow),
            SyntaxKind::Precision => Some(SyntaxKindType::Follow),
            SyntaxKind::Preserve => Some(SyntaxKindType::Follow),
            SyntaxKind::Prepare => Some(SyntaxKindType::Follow),
            SyntaxKind::Prepared => Some(SyntaxKindType::Follow),
            SyntaxKind::Primary => Some(SyntaxKindType::Follow),
            SyntaxKind::Prior => Some(SyntaxKindType::Follow),
            SyntaxKind::Privileges => Some(SyntaxKindType::Follow),
            SyntaxKind::Procedural => Some(SyntaxKindType::Follow),
            SyntaxKind::Procedure => Some(SyntaxKindType::Follow),
            SyntaxKind::Procedures => Some(SyntaxKindType::Follow),
            SyntaxKind::Program => Some(SyntaxKindType::Follow),
            SyntaxKind::Publication => Some(SyntaxKindType::Follow),
            SyntaxKind::Quote => Some(SyntaxKindType::Follow),
            SyntaxKind::Range => Some(SyntaxKindType::Follow),
            SyntaxKind::Read => Some(SyntaxKindType::Follow),
            SyntaxKind::Real => Some(SyntaxKindType::Follow),
            SyntaxKind::Reassign => Some(SyntaxKindType::Follow),
            SyntaxKind::Recheck => Some(SyntaxKindType::Follow),
            SyntaxKind::Recursive => Some(SyntaxKindType::Follow),
            SyntaxKind::Ref => Some(SyntaxKindType::Follow),
            SyntaxKind::References => Some(SyntaxKindType::Follow),
            SyntaxKind::Referencing => Some(SyntaxKindType::Follow),
            SyntaxKind::Refresh => Some(SyntaxKindType::Follow),
            SyntaxKind::Reindex => Some(SyntaxKindType::Follow),
            SyntaxKind::RelativeP => Some(SyntaxKindType::Follow),
            SyntaxKind::Release => Some(SyntaxKindType::Follow),
            SyntaxKind::Rename => Some(SyntaxKindType::Follow),
            SyntaxKind::Repeatable => Some(SyntaxKindType::Follow),
            SyntaxKind::Replace => Some(SyntaxKindType::Follow),
            SyntaxKind::Replica => Some(SyntaxKindType::Follow),
            SyntaxKind::Reset => Some(SyntaxKindType::Follow),
            SyntaxKind::Restart => Some(SyntaxKindType::Follow),
            SyntaxKind::Restrict => Some(SyntaxKindType::Follow),
            SyntaxKind::Returning => Some(SyntaxKindType::Follow),
            SyntaxKind::Returns => Some(SyntaxKindType::Follow),
            SyntaxKind::Revoke => Some(SyntaxKindType::Follow),
            SyntaxKind::Right => Some(SyntaxKindType::Follow),
            SyntaxKind::Role => Some(SyntaxKindType::Follow),
            SyntaxKind::Rollback => Some(SyntaxKindType::Follow),
            SyntaxKind::Rollup => Some(SyntaxKindType::Follow),
            SyntaxKind::Routine => Some(SyntaxKindType::Follow),
            SyntaxKind::Routines => Some(SyntaxKindType::Follow),
            SyntaxKind::Row => Some(SyntaxKindType::Follow),
            SyntaxKind::Rows => Some(SyntaxKindType::Follow),
            SyntaxKind::Rule => Some(SyntaxKindType::Follow),
            SyntaxKind::Savepoint => Some(SyntaxKindType::Follow),
            SyntaxKind::Schema => Some(SyntaxKindType::Follow),
            SyntaxKind::Schemas => Some(SyntaxKindType::Follow),
            SyntaxKind::Scroll => Some(SyntaxKindType::Follow),
            SyntaxKind::Search => Some(SyntaxKindType::Follow),
            SyntaxKind::SecondP => Some(SyntaxKindType::Follow),
            SyntaxKind::Security => Some(SyntaxKindType::Follow),
            SyntaxKind::Select => Some(SyntaxKindType::Follow),
            SyntaxKind::Sequence => Some(SyntaxKindType::Follow),
            SyntaxKind::Sequences => Some(SyntaxKindType::Follow),
            SyntaxKind::Serializable => Some(SyntaxKindType::Follow),
            SyntaxKind::Server => Some(SyntaxKindType::Follow),
            SyntaxKind::Session => Some(SyntaxKindType::Follow),
            SyntaxKind::SessionUser => Some(SyntaxKindType::Follow),
            SyntaxKind::Set => Some(SyntaxKindType::Follow),
            SyntaxKind::Sets => Some(SyntaxKindType::Follow),
            SyntaxKind::Setof => Some(SyntaxKindType::Follow),
            SyntaxKind::Share => Some(SyntaxKindType::Follow),
            SyntaxKind::Show => Some(SyntaxKindType::Follow),
            SyntaxKind::Similar => Some(SyntaxKindType::Follow),
            SyntaxKind::Simple => Some(SyntaxKindType::Follow),
            SyntaxKind::Skip => Some(SyntaxKindType::Follow),
            SyntaxKind::Smallint => Some(SyntaxKindType::Follow),
            SyntaxKind::Snapshot => Some(SyntaxKindType::Follow),
            SyntaxKind::Some => Some(SyntaxKindType::Follow),
            SyntaxKind::SqlP => Some(SyntaxKindType::Follow),
            SyntaxKind::Stable => Some(SyntaxKindType::Follow),
            SyntaxKind::StandaloneP => Some(SyntaxKindType::Follow),
            SyntaxKind::Start => Some(SyntaxKindType::Follow),
            SyntaxKind::Statement => Some(SyntaxKindType::Follow),
            SyntaxKind::Statistics => Some(SyntaxKindType::Follow),
            SyntaxKind::Stdin => Some(SyntaxKindType::Follow),
            SyntaxKind::Stdout => Some(SyntaxKindType::Follow),
            SyntaxKind::Storage => Some(SyntaxKindType::Follow),
            SyntaxKind::Stored => Some(SyntaxKindType::Follow),
            SyntaxKind::StrictP => Some(SyntaxKindType::Follow),
            SyntaxKind::StripP => Some(SyntaxKindType::Follow),
            SyntaxKind::Subscription => Some(SyntaxKindType::Follow),
            SyntaxKind::Substring => Some(SyntaxKindType::Follow),
            SyntaxKind::Support => Some(SyntaxKindType::Follow),
            SyntaxKind::Symmetric => Some(SyntaxKindType::Follow),
            SyntaxKind::Sysid => Some(SyntaxKindType::Follow),
            SyntaxKind::SystemP => Some(SyntaxKindType::Follow),
            SyntaxKind::Table => Some(SyntaxKindType::Follow),
            SyntaxKind::Tables => Some(SyntaxKindType::Follow),
            SyntaxKind::Tablesample => Some(SyntaxKindType::Follow),
            SyntaxKind::Tablespace => Some(SyntaxKindType::Follow),
            SyntaxKind::Temp => Some(SyntaxKindType::Follow),
            SyntaxKind::Template => Some(SyntaxKindType::Follow),
            SyntaxKind::Temporary => Some(SyntaxKindType::Follow),
            SyntaxKind::TextP => Some(SyntaxKindType::Follow),
            SyntaxKind::Then => Some(SyntaxKindType::Follow),
            SyntaxKind::Ties => Some(SyntaxKindType::Follow),
            SyntaxKind::Time => Some(SyntaxKindType::Follow),
            SyntaxKind::Timestamp => Some(SyntaxKindType::Follow),
            SyntaxKind::To => Some(SyntaxKindType::Follow),
            SyntaxKind::Trailing => Some(SyntaxKindType::Follow),
            SyntaxKind::Transaction => Some(SyntaxKindType::Follow),
            SyntaxKind::Transform => Some(SyntaxKindType::Follow),
            SyntaxKind::Treat => Some(SyntaxKindType::Follow),
            SyntaxKind::Trigger => Some(SyntaxKindType::Follow),
            SyntaxKind::Trim => Some(SyntaxKindType::Follow),
            SyntaxKind::TrueP => Some(SyntaxKindType::Follow),
            SyntaxKind::Truncate => Some(SyntaxKindType::Follow),
            SyntaxKind::Trusted => Some(SyntaxKindType::Follow),
            SyntaxKind::TypeP => Some(SyntaxKindType::Follow),
            SyntaxKind::TypesP => Some(SyntaxKindType::Follow),
            SyntaxKind::Uescape => Some(SyntaxKindType::Follow),
            SyntaxKind::Unbounded => Some(SyntaxKindType::Follow),
            SyntaxKind::Uncommitted => Some(SyntaxKindType::Follow),
            SyntaxKind::Unencrypted => Some(SyntaxKindType::Follow),
            SyntaxKind::Union => Some(SyntaxKindType::Follow),
            SyntaxKind::Unique => Some(SyntaxKindType::Follow),
            SyntaxKind::Unknown => Some(SyntaxKindType::Follow),
            SyntaxKind::Unlisten => Some(SyntaxKindType::Follow),
            SyntaxKind::Unlogged => Some(SyntaxKindType::Follow),
            SyntaxKind::Until => Some(SyntaxKindType::Follow),
            SyntaxKind::Update => Some(SyntaxKindType::Follow),
            SyntaxKind::User => Some(SyntaxKindType::Follow),
            SyntaxKind::Using => Some(SyntaxKindType::Follow),
            SyntaxKind::Vacuum => Some(SyntaxKindType::Follow),
            SyntaxKind::Valid => Some(SyntaxKindType::Follow),
            SyntaxKind::Validate => Some(SyntaxKindType::Follow),
            SyntaxKind::Validator => Some(SyntaxKindType::Follow),
            SyntaxKind::ValueP => Some(SyntaxKindType::Follow),
            SyntaxKind::Values => Some(SyntaxKindType::Follow),
            SyntaxKind::Varchar => Some(SyntaxKindType::Follow),
            SyntaxKind::Variadic => Some(SyntaxKindType::Follow),
            SyntaxKind::Varying => Some(SyntaxKindType::Follow),
            SyntaxKind::Verbose => Some(SyntaxKindType::Follow),
            SyntaxKind::VersionP => Some(SyntaxKindType::Follow),
            SyntaxKind::View => Some(SyntaxKindType::Follow),
            SyntaxKind::Views => Some(SyntaxKindType::Follow),
            SyntaxKind::Volatile => Some(SyntaxKindType::Follow),
            SyntaxKind::When => Some(SyntaxKindType::Follow),
            SyntaxKind::Where => Some(SyntaxKindType::Follow),
            SyntaxKind::WhitespaceP => Some(SyntaxKindType::Follow),
            SyntaxKind::Window => Some(SyntaxKindType::Follow),
            SyntaxKind::With => Some(SyntaxKindType::Follow),
            SyntaxKind::Within => Some(SyntaxKindType::Follow),
            SyntaxKind::Without => Some(SyntaxKindType::Follow),
            SyntaxKind::Work => Some(SyntaxKindType::Follow),
            SyntaxKind::Wrapper => Some(SyntaxKindType::Follow),
            SyntaxKind::Write => Some(SyntaxKindType::Follow),
            SyntaxKind::XmlP => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlattributes => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlconcat => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlelement => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlexists => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlforest => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlnamespaces => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlparse => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlpi => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlroot => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmlserialize => Some(SyntaxKindType::Follow),
            SyntaxKind::Xmltable => Some(SyntaxKindType::Follow),
            SyntaxKind::YearP => Some(SyntaxKindType::Follow),
            SyntaxKind::YesP => Some(SyntaxKindType::Follow),
            SyntaxKind::Zone => Some(SyntaxKindType::Follow),
            SyntaxKind::NotLa => Some(SyntaxKindType::Follow),
            SyntaxKind::NullsLa => Some(SyntaxKindType::Follow),
            SyntaxKind::WithLa => Some(SyntaxKindType::Follow),
            SyntaxKind::Postfixop => Some(SyntaxKindType::Follow),
            SyntaxKind::Uminus => Some(SyntaxKindType::Follow),
            _ => None,
        }
    }
}
