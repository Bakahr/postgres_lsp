use cstree::Syntax;
/// This file bridges the gap between pg_query.rs nodes, and the syntaxkind cstree requires.
/// Most of the code here can be generated later.
use pg_query::{protobuf::ScanToken, NodeRef};

#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, Syntax)]
#[repr(u32)]
pub enum SyntaxKind {
    // custom nodes, which are not parsed by pg_query.rs
    SourceFile,
    Comment,
    Whitespace,
    Newline,
    Tab,
    Word,         // common value for all keywords (select, from, ...)
    AnyStatement, // node for unknown statements (e.g. when parsing fails)
    // from here copyied from NodeEnum
    Alias,
    RangeVar,
    TableFunc,
    Expr,
    Var,
    Param,
    Aggref,
    GroupingFunc,
    WindowFunc,
    SubscriptingRef,
    FuncExpr,
    NamedArgExpr,
    OpExpr,
    DistinctExpr,
    NullIfExpr,
    ScalarArrayOpExpr,
    BoolExpr,
    SubLink,
    SubPlan,
    AlternativeSubPlan,
    FieldSelect,
    FieldStore,
    RelabelType,
    CoerceViaIo,
    ArrayCoerceExpr,
    ConvertRowtypeExpr,
    CollateExpr,
    CaseExpr,
    CaseWhen,
    CaseTestExpr,
    ArrayExpr,
    RowExpr,
    RowCompareExpr,
    CoalesceExpr,
    MinMaxExpr,
    SqlvalueFunction,
    XmlExpr,
    NullTest,
    BooleanTest,
    CoerceToDomain,
    CoerceToDomainValue,
    SetToDefault,
    CurrentOfExpr,
    NextValueExpr,
    InferenceElem,
    TargetEntry,
    RangeTblRef,
    JoinExpr,
    FromExpr,
    OnConflictExpr,
    IntoClause,
    RawStmt,
    Query,
    InsertStmt,
    DeleteStmt,
    UpdateStmt,
    SelectStmt,
    AlterTableStmt,
    AlterTableCmd,
    AlterDomainStmt,
    SetOperationStmt,
    GrantStmt,
    GrantRoleStmt,
    AlterDefaultPrivilegesStmt,
    ClosePortalStmt,
    ClusterStmt,
    CopyStmt,
    CreateStmt,
    DefineStmt,
    DropStmt,
    TruncateStmt,
    CommentStmt,
    FetchStmt,
    IndexStmt,
    CreateFunctionStmt,
    AlterFunctionStmt,
    DoStmt,
    RenameStmt,
    RuleStmt,
    NotifyStmt,
    ListenStmt,
    UnlistenStmt,
    TransactionStmt,
    ViewStmt,
    LoadStmt,
    CreateDomainStmt,
    CreatedbStmt,
    DropdbStmt,
    VacuumStmt,
    ExplainStmt,
    CreateTableAsStmt,
    CreateSeqStmt,
    AlterSeqStmt,
    VariableSetStmt,
    VariableShowStmt,
    DiscardStmt,
    CreateTrigStmt,
    CreatePlangStmt,
    CreateRoleStmt,
    AlterRoleStmt,
    DropRoleStmt,
    LockStmt,
    ConstraintsSetStmt,
    ReindexStmt,
    CheckPointStmt,
    CreateSchemaStmt,
    AlterDatabaseStmt,
    AlterDatabaseSetStmt,
    AlterRoleSetStmt,
    CreateConversionStmt,
    CreateCastStmt,
    CreateOpClassStmt,
    CreateOpFamilyStmt,
    AlterOpFamilyStmt,
    PrepareStmt,
    ExecuteStmt,
    DeallocateStmt,
    DeclareCursorStmt,
    CreateTableSpaceStmt,
    DropTableSpaceStmt,
    AlterObjectDependsStmt,
    AlterObjectSchemaStmt,
    AlterOwnerStmt,
    AlterOperatorStmt,
    AlterTypeStmt,
    DropOwnedStmt,
    ReassignOwnedStmt,
    CompositeTypeStmt,
    CreateEnumStmt,
    CreateRangeStmt,
    AlterEnumStmt,
    AlterTsdictionaryStmt,
    AlterTsconfigurationStmt,
    CreateFdwStmt,
    AlterFdwStmt,
    CreateForeignServerStmt,
    AlterForeignServerStmt,
    CreateUserMappingStmt,
    AlterUserMappingStmt,
    DropUserMappingStmt,
    AlterTableSpaceOptionsStmt,
    AlterTableMoveAllStmt,
    SecLabelStmt,
    CreateForeignTableStmt,
    ImportForeignSchemaStmt,
    CreateExtensionStmt,
    AlterExtensionStmt,
    AlterExtensionContentsStmt,
    CreateEventTrigStmt,
    AlterEventTrigStmt,
    RefreshMatViewStmt,
    ReplicaIdentityStmt,
    AlterSystemStmt,
    CreatePolicyStmt,
    AlterPolicyStmt,
    CreateTransformStmt,
    CreateAmStmt,
    CreatePublicationStmt,
    AlterPublicationStmt,
    CreateSubscriptionStmt,
    AlterSubscriptionStmt,
    DropSubscriptionStmt,
    CreateStatsStmt,
    AlterCollationStmt,
    CallStmt,
    AlterStatsStmt,
    AExpr,
    ColumnRef,
    ParamRef,
    AConst,
    FuncCall,
    AStar,
    AIndices,
    AIndirection,
    AArrayExpr,
    ResTarget,
    MultiAssignRef,
    TypeCast,
    CollateClause,
    SortBy,
    WindowDef,
    RangeSubselect,
    RangeFunction,
    RangeTableSample,
    RangeTableFunc,
    RangeTableFuncCol,
    TypeName,
    ColumnDef,
    IndexElem,
    Constraint,
    DefElem,
    RangeTblEntry,
    RangeTblFunction,
    TableSampleClause,
    WithCheckOption,
    SortGroupClause,
    GroupingSet,
    WindowClause,
    ObjectWithArgs,
    AccessPriv,
    CreateOpClassItem,
    TableLikeClause,
    FunctionParameter,
    LockingClause,
    RowMarkClause,
    XmlSerialize,
    WithClause,
    InferClause,
    OnConflictClause,
    CommonTableExpr,
    RoleSpec,
    TriggerTransition,
    PartitionElem,
    PartitionSpec,
    PartitionBoundSpec,
    PartitionRangeDatum,
    PartitionCmd,
    VacuumRelation,
    InlineCodeBlock,
    CallContext,
    // Integer,
    Float,
    String,
    BitString,
    Null,
    List,
    IntList,
    OidList,
    // from here copied from protobuf::Token
    Nul,
    /// Single-character tokens that are returned 1:1 (identical with "self" list in scan.l)
    /// Either supporting syntax, or single-character operators (some can be both)
    /// Also see <https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-SYNTAX-SPECIAL-CHARS>
    ///
    /// "%"
    Ascii37,
    /// "("
    Ascii40,
    /// ")"
    Ascii41,
    /// "*"
    Ascii42,
    /// "+"
    Ascii43,
    /// ","
    Ascii44,
    /// "-"
    Ascii45,
    /// "."
    Ascii46,
    /// "/"
    Ascii47,
    /// ":"
    Ascii58,
    /// ";"
    Ascii59,
    /// "<"
    Ascii60,
    /// ",
    Ascii61,
    /// ">"
    Ascii62,
    /// "?"
    Ascii63,
    /// "["
    Ascii91,
    /// "\"
    Ascii92,
    /// "]"
    Ascii93,
    /// "^"
    Ascii94,
    /// Named tokens in scan.l
    Ident,
    Uident,
    Fconst,
    Sconst,
    Usconst,
    Bconst,
    Xconst,
    Op,
    Iconst,
    // Param,
    Typecast,
    DotDot,
    ColonEquals,
    EqualsGreater,
    LessEquals,
    GreaterEquals,
    NotEquals,
    SqlComment,
    CComment,
    AbortP,
    AbsoluteP,
    Access,
    Action,
    AddP,
    Admin,
    After,
    Aggregate,
    All,
    Also,
    Alter,
    Always,
    Analyse,
    Analyze,
    And,
    Any,
    Array,
    As,
    Asc,
    Assertion,
    Assignment,
    Asymmetric,
    At,
    Attach,
    Attribute,
    Authorization,
    Backward,
    Before,
    BeginP,
    Between,
    Bigint,
    Binary,
    Bit,
    BooleanP,
    Both,
    By,
    Cache,
    Call,
    Called,
    Cascade,
    Cascaded,
    Case,
    Cast,
    CatalogP,
    Chain,
    CharP,
    Character,
    Characteristics,
    Check,
    Checkpoint,
    Class,
    Close,
    Cluster,
    Coalesce,
    Collate,
    Collation,
    Column,
    Columns,
    // Comment,
    Comments,
    Commit,
    Committed,
    Concurrently,
    Configuration,
    Conflict,
    Connection,
    // Constraint,
    Constraints,
    ContentP,
    ContinueP,
    ConversionP,
    Copy,
    Cost,
    Create,
    Cross,
    Csv,
    Cube,
    CurrentP,
    CurrentCatalog,
    CurrentDate,
    CurrentRole,
    CurrentSchema,
    CurrentTime,
    CurrentTimestamp,
    CurrentUser,
    Cursor,
    Cycle,
    DataP,
    Database,
    DayP,
    Deallocate,
    Dec,
    DecimalP,
    Declare,
    Default,
    Defaults,
    Deferrable,
    Deferred,
    Definer,
    DeleteP,
    Delimiter,
    Delimiters,
    Depends,
    Desc,
    Detach,
    Dictionary,
    DisableP,
    Discard,
    Distinct,
    Do,
    DocumentP,
    DomainP,
    DoubleP,
    Drop,
    Each,
    Else,
    EnableP,
    Encoding,
    Encrypted,
    EndP,
    EnumP,
    Escape,
    Event,
    Except,
    Exclude,
    Excluding,
    Exclusive,
    Execute,
    Exists,
    Explain,
    Expression,
    Extension,
    External,
    Extract,
    FalseP,
    Family,
    Fetch,
    Filter,
    FirstP,
    FloatP,
    Following,
    For,
    Force,
    Foreign,
    Forward,
    Freeze,
    From,
    Full,
    Function,
    Functions,
    Generated,
    Global,
    Grant,
    Granted,
    Greatest,
    GroupP,
    Grouping,
    Groups,
    Handler,
    Having,
    HeaderP,
    Hold,
    HourP,
    IdentityP,
    IfP,
    Ilike,
    Immediate,
    Immutable,
    ImplicitP,
    ImportP,
    InP,
    Include,
    Including,
    Increment,
    Index,
    Indexes,
    Inherit,
    Inherits,
    Initially,
    InlineP,
    InnerP,
    Inout,
    InputP,
    Insensitive,
    Insert,
    Instead,
    IntP,
    Integer,
    Intersect,
    Interval,
    Into,
    Invoker,
    Is,
    Isnull,
    Isolation,
    Join,
    Key,
    Label,
    Language,
    LargeP,
    LastP,
    LateralP,
    Leading,
    Leakproof,
    Least,
    Left,
    Level,
    Like,
    Limit,
    Listen,
    Load,
    Local,
    Localtime,
    Localtimestamp,
    Location,
    LockP,
    Locked,
    Logged,
    Mapping,
    Match,
    Materialized,
    Maxvalue,
    Method,
    MinuteP,
    Minvalue,
    Mode,
    MonthP,
    Move,
    NameP,
    Names,
    National,
    Natural,
    Nchar,
    New,
    Next,
    Nfc,
    Nfd,
    Nfkc,
    Nfkd,
    No,
    None,
    Normalize,
    Normalized,
    Not,
    Nothing,
    Notify,
    Notnull,
    Nowait,
    NullP,
    Nullif,
    NullsP,
    Numeric,
    ObjectP,
    Of,
    Off,
    Offset,
    Oids,
    Old,
    On,
    Only,
    Operator,
    Option,
    Options,
    Or,
    Order,
    Ordinality,
    Others,
    OutP,
    OuterP,
    Over,
    Overlaps,
    Overlay,
    Overriding,
    Owned,
    Owner,
    Parallel,
    Parser,
    Partial,
    Partition,
    Passing,
    Password,
    Placing,
    Plans,
    Policy,
    Position,
    Preceding,
    Precision,
    Preserve,
    Prepare,
    Prepared,
    Primary,
    Prior,
    Privileges,
    Procedural,
    Procedure,
    Procedures,
    Program,
    Publication,
    Quote,
    Range,
    Read,
    Real,
    Reassign,
    Recheck,
    Recursive,
    Ref,
    References,
    Referencing,
    Refresh,
    Reindex,
    RelativeP,
    Release,
    Rename,
    Repeatable,
    Replace,
    Replica,
    Reset,
    Restart,
    Restrict,
    Returning,
    Returns,
    Revoke,
    Right,
    Role,
    Rollback,
    Rollup,
    Routine,
    Routines,
    Row,
    Rows,
    Rule,
    Savepoint,
    Schema,
    Schemas,
    Scroll,
    Search,
    SecondP,
    Security,
    Select,
    Sequence,
    Sequences,
    Serializable,
    Server,
    Session,
    SessionUser,
    Set,
    Sets,
    Setof,
    Share,
    Show,
    Similar,
    Simple,
    Skip,
    Smallint,
    Snapshot,
    Some,
    SqlP,
    Stable,
    StandaloneP,
    Start,
    Statement,
    Statistics,
    Stdin,
    Stdout,
    Storage,
    Stored,
    StrictP,
    StripP,
    Subscription,
    Substring,
    Support,
    Symmetric,
    Sysid,
    SystemP,
    Table,
    Tables,
    Tablesample,
    Tablespace,
    Temp,
    Template,
    Temporary,
    TextP,
    Then,
    Ties,
    Time,
    Timestamp,
    To,
    Trailing,
    Transaction,
    Transform,
    Treat,
    Trigger,
    Trim,
    TrueP,
    Truncate,
    Trusted,
    TypeP,
    TypesP,
    Uescape,
    Unbounded,
    Uncommitted,
    Unencrypted,
    Union,
    Unique,
    Unknown,
    Unlisten,
    Unlogged,
    Until,
    Update,
    User,
    Using,
    Vacuum,
    Valid,
    Validate,
    Validator,
    ValueP,
    Values,
    Varchar,
    Variadic,
    Varying,
    Verbose,
    VersionP,
    View,
    Views,
    Volatile,
    When,
    Where,
    WhitespaceP,
    Window,
    With,
    Within,
    Without,
    Work,
    Wrapper,
    Write,
    XmlP,
    Xmlattributes,
    Xmlconcat,
    Xmlelement,
    Xmlexists,
    Xmlforest,
    Xmlnamespaces,
    Xmlparse,
    Xmlpi,
    Xmlroot,
    Xmlserialize,
    Xmltable,
    YearP,
    YesP,
    Zone,
    NotLa,
    NullsLa,
    WithLa,
    Postfixop,
    Uminus,
}

pub enum SyntaxKindType {
    Follow,
    Close,
}

impl SyntaxKind {
    /// Converts a `pg_query` node to a `SyntaxKind`.
    /// can be generated.
    pub fn from_pg_query_node(node: &NodeRef) -> Self {
        match node {
            NodeRef::SelectStmt(_) => SyntaxKind::SelectStmt,
            NodeRef::CreateFunctionStmt(_) => SyntaxKind::CreateFunctionStmt,
            NodeRef::ResTarget(_) => SyntaxKind::ResTarget,
            NodeRef::AExpr(_) => SyntaxKind::AExpr,
            NodeRef::RangeVar(_) => SyntaxKind::RangeVar,
            NodeRef::ColumnRef(_) => SyntaxKind::ColumnRef,
            NodeRef::AConst(_) => SyntaxKind::AConst,
            _ => panic!("Unknown node type: {:?}", node),
        }
    }

    /// Converts a `pg_query` ScanToken to a `SyntaxKind`.
    /// can be generated.
    pub fn from_pg_query_token(token: &ScanToken) -> Self {
        match token.token {
            0 => SyntaxKind::Nul,
            37 => SyntaxKind::Ascii37,
            40 => SyntaxKind::Ascii40,
            41 => SyntaxKind::Ascii41,
            42 => SyntaxKind::Ascii42,
            43 => SyntaxKind::Ascii43,
            44 => SyntaxKind::Ascii44,
            45 => SyntaxKind::Ascii45,
            46 => SyntaxKind::Ascii46,
            47 => SyntaxKind::Ascii47,
            58 => SyntaxKind::Ascii58,
            59 => SyntaxKind::Ascii59,
            60 => SyntaxKind::Ascii60,
            61 => SyntaxKind::Ascii61,
            62 => SyntaxKind::Ascii62,
            63 => SyntaxKind::Ascii63,
            91 => SyntaxKind::Ascii91,
            92 => SyntaxKind::Ascii92,
            93 => SyntaxKind::Ascii93,
            94 => SyntaxKind::Ascii94,
            258 => SyntaxKind::Ident,
            259 => SyntaxKind::Uident,
            260 => SyntaxKind::Fconst,
            261 => SyntaxKind::Sconst,
            262 => SyntaxKind::Usconst,
            263 => SyntaxKind::Bconst,
            264 => SyntaxKind::Xconst,
            265 => SyntaxKind::Op,
            266 => SyntaxKind::Iconst,
            267 => SyntaxKind::Param,
            268 => SyntaxKind::Typecast,
            269 => SyntaxKind::DotDot,
            270 => SyntaxKind::ColonEquals,
            271 => SyntaxKind::EqualsGreater,
            272 => SyntaxKind::LessEquals,
            273 => SyntaxKind::GreaterEquals,
            274 => SyntaxKind::NotEquals,
            275 => SyntaxKind::SqlComment,
            276 => SyntaxKind::CComment,
            277 => SyntaxKind::AbortP,
            278 => SyntaxKind::AbsoluteP,
            279 => SyntaxKind::Access,
            280 => SyntaxKind::Action,
            281 => SyntaxKind::AddP,
            282 => SyntaxKind::Admin,
            283 => SyntaxKind::After,
            284 => SyntaxKind::Aggregate,
            285 => SyntaxKind::All,
            286 => SyntaxKind::Also,
            287 => SyntaxKind::Alter,
            288 => SyntaxKind::Always,
            289 => SyntaxKind::Analyse,
            290 => SyntaxKind::Analyze,
            291 => SyntaxKind::And,
            292 => SyntaxKind::Any,
            293 => SyntaxKind::Array,
            294 => SyntaxKind::As,
            295 => SyntaxKind::Asc,
            296 => SyntaxKind::Assertion,
            297 => SyntaxKind::Assignment,
            298 => SyntaxKind::Asymmetric,
            299 => SyntaxKind::At,
            300 => SyntaxKind::Attach,
            301 => SyntaxKind::Attribute,
            302 => SyntaxKind::Authorization,
            303 => SyntaxKind::Backward,
            305 => SyntaxKind::BeginP,
            306 => SyntaxKind::Between,
            307 => SyntaxKind::Bigint,
            308 => SyntaxKind::Binary,
            309 => SyntaxKind::Bit,
            310 => SyntaxKind::BooleanP,
            311 => SyntaxKind::Both,
            312 => SyntaxKind::By,
            313 => SyntaxKind::Cache,
            314 => SyntaxKind::Call,
            315 => SyntaxKind::Called,
            316 => SyntaxKind::Cascade,
            317 => SyntaxKind::Cascaded,
            318 => SyntaxKind::Case,
            319 => SyntaxKind::Cast,
            320 => SyntaxKind::CatalogP,
            321 => SyntaxKind::Chain,
            322 => SyntaxKind::CharP,
            323 => SyntaxKind::Character,
            324 => SyntaxKind::Characteristics,
            325 => SyntaxKind::Check,
            326 => SyntaxKind::Checkpoint,
            327 => SyntaxKind::Class,
            328 => SyntaxKind::Close,
            329 => SyntaxKind::Cluster,
            330 => SyntaxKind::Coalesce,
            331 => SyntaxKind::Collate,
            332 => SyntaxKind::Collation,
            333 => SyntaxKind::Column,
            334 => SyntaxKind::Columns,
            335 => SyntaxKind::Comment,
            336 => SyntaxKind::Comments,
            337 => SyntaxKind::Commit,
            338 => SyntaxKind::Committed,
            339 => SyntaxKind::Concurrently,
            340 => SyntaxKind::Configuration,
            341 => SyntaxKind::Conflict,
            342 => SyntaxKind::Connection,
            343 => SyntaxKind::Constraint,
            344 => SyntaxKind::Constraints,
            345 => SyntaxKind::ContentP,
            346 => SyntaxKind::ContinueP,
            347 => SyntaxKind::ConversionP,
            348 => SyntaxKind::Copy,
            349 => SyntaxKind::Cost,
            350 => SyntaxKind::Create,
            351 => SyntaxKind::Cross,
            352 => SyntaxKind::Csv,
            353 => SyntaxKind::Cube,
            354 => SyntaxKind::CurrentP,
            355 => SyntaxKind::CurrentCatalog,
            356 => SyntaxKind::CurrentDate,
            357 => SyntaxKind::CurrentRole,
            358 => SyntaxKind::CurrentSchema,
            359 => SyntaxKind::CurrentTime,
            360 => SyntaxKind::CurrentTimestamp,
            361 => SyntaxKind::CurrentUser,
            362 => SyntaxKind::Cursor,
            363 => SyntaxKind::Cycle,
            364 => SyntaxKind::DataP,
            365 => SyntaxKind::Database,
            366 => SyntaxKind::DayP,
            367 => SyntaxKind::Deallocate,
            368 => SyntaxKind::Dec,
            369 => SyntaxKind::DecimalP,
            370 => SyntaxKind::Declare,
            371 => SyntaxKind::Default,
            372 => SyntaxKind::Defaults,
            373 => SyntaxKind::Deferrable,
            374 => SyntaxKind::Deferred,
            375 => SyntaxKind::Definer,
            376 => SyntaxKind::DeleteP,
            377 => SyntaxKind::Delimiter,
            378 => SyntaxKind::Delimiters,
            379 => SyntaxKind::Depends,
            380 => SyntaxKind::Desc,
            381 => SyntaxKind::Detach,
            382 => SyntaxKind::Dictionary,
            383 => SyntaxKind::DisableP,
            384 => SyntaxKind::Discard,
            385 => SyntaxKind::Distinct,
            386 => SyntaxKind::Do,
            387 => SyntaxKind::DocumentP,
            388 => SyntaxKind::DomainP,
            389 => SyntaxKind::DoubleP,
            390 => SyntaxKind::Drop,
            391 => SyntaxKind::Each,
            392 => SyntaxKind::Else,
            393 => SyntaxKind::EnableP,
            394 => SyntaxKind::Encoding,
            395 => SyntaxKind::Encrypted,
            396 => SyntaxKind::EndP,
            397 => SyntaxKind::EnumP,
            398 => SyntaxKind::Escape,
            399 => SyntaxKind::Event,
            400 => SyntaxKind::Except,
            401 => SyntaxKind::Exclude,
            402 => SyntaxKind::Excluding,
            403 => SyntaxKind::Exclusive,
            404 => SyntaxKind::Execute,
            405 => SyntaxKind::Exists,
            406 => SyntaxKind::Explain,
            407 => SyntaxKind::Expression,
            408 => SyntaxKind::Extension,
            409 => SyntaxKind::External,
            410 => SyntaxKind::Extract,
            411 => SyntaxKind::FalseP,
            412 => SyntaxKind::Family,
            413 => SyntaxKind::Fetch,
            414 => SyntaxKind::Filter,
            415 => SyntaxKind::FirstP,
            416 => SyntaxKind::FloatP,
            417 => SyntaxKind::Following,
            418 => SyntaxKind::For,
            419 => SyntaxKind::Force,
            420 => SyntaxKind::Foreign,
            421 => SyntaxKind::Forward,
            422 => SyntaxKind::Freeze,
            423 => SyntaxKind::From,
            424 => SyntaxKind::Full,
            425 => SyntaxKind::Function,
            426 => SyntaxKind::Functions,
            427 => SyntaxKind::Generated,
            428 => SyntaxKind::Global,
            429 => SyntaxKind::Grant,
            430 => SyntaxKind::Granted,
            431 => SyntaxKind::Greatest,
            432 => SyntaxKind::GroupP,
            433 => SyntaxKind::Grouping,
            434 => SyntaxKind::Groups,
            435 => SyntaxKind::Handler,
            436 => SyntaxKind::Having,
            437 => SyntaxKind::HeaderP,
            438 => SyntaxKind::Hold,
            439 => SyntaxKind::HourP,
            440 => SyntaxKind::IdentityP,
            441 => SyntaxKind::IfP,
            442 => SyntaxKind::Ilike,
            443 => SyntaxKind::Immediate,
            444 => SyntaxKind::Immutable,
            445 => SyntaxKind::ImplicitP,
            446 => SyntaxKind::ImportP,
            447 => SyntaxKind::InP,
            448 => SyntaxKind::Include,
            449 => SyntaxKind::Including,
            450 => SyntaxKind::Increment,
            451 => SyntaxKind::Index,
            452 => SyntaxKind::Indexes,
            453 => SyntaxKind::Inherit,
            454 => SyntaxKind::Inherits,
            455 => SyntaxKind::Initially,
            456 => SyntaxKind::InlineP,
            457 => SyntaxKind::InnerP,
            458 => SyntaxKind::Inout,
            459 => SyntaxKind::InputP,
            460 => SyntaxKind::Insensitive,
            461 => SyntaxKind::Insert,
            462 => SyntaxKind::Instead,
            463 => SyntaxKind::IntP,
            464 => SyntaxKind::Integer,
            465 => SyntaxKind::Intersect,
            466 => SyntaxKind::Interval,
            467 => SyntaxKind::Into,
            468 => SyntaxKind::Invoker,
            469 => SyntaxKind::Is,
            470 => SyntaxKind::Isnull,
            471 => SyntaxKind::Isolation,
            472 => SyntaxKind::Join,
            473 => SyntaxKind::Key,
            474 => SyntaxKind::Label,
            475 => SyntaxKind::Language,
            476 => SyntaxKind::LargeP,
            477 => SyntaxKind::LastP,
            478 => SyntaxKind::LateralP,
            479 => SyntaxKind::Leading,
            480 => SyntaxKind::Leakproof,
            481 => SyntaxKind::Least,
            482 => SyntaxKind::Left,
            483 => SyntaxKind::Level,
            484 => SyntaxKind::Like,
            485 => SyntaxKind::Limit,
            486 => SyntaxKind::Listen,
            487 => SyntaxKind::Load,
            488 => SyntaxKind::Local,
            489 => SyntaxKind::Localtime,
            490 => SyntaxKind::Localtimestamp,
            491 => SyntaxKind::Location,
            492 => SyntaxKind::LockP,
            493 => SyntaxKind::Locked,
            494 => SyntaxKind::Logged,
            495 => SyntaxKind::Mapping,
            496 => SyntaxKind::Match,
            497 => SyntaxKind::Materialized,
            498 => SyntaxKind::Maxvalue,
            499 => SyntaxKind::Method,
            500 => SyntaxKind::MinuteP,
            501 => SyntaxKind::Minvalue,
            502 => SyntaxKind::Mode,
            503 => SyntaxKind::MonthP,
            504 => SyntaxKind::Move,
            505 => SyntaxKind::NameP,
            506 => SyntaxKind::Names,
            507 => SyntaxKind::National,
            508 => SyntaxKind::Natural,
            509 => SyntaxKind::Nchar,
            510 => SyntaxKind::New,
            511 => SyntaxKind::Next,
            512 => SyntaxKind::Nfc,
            513 => SyntaxKind::Nfd,
            514 => SyntaxKind::Nfkc,
            515 => SyntaxKind::Nfkd,
            516 => SyntaxKind::No,
            517 => SyntaxKind::None,
            518 => SyntaxKind::Normalize,
            519 => SyntaxKind::Normalized,
            520 => SyntaxKind::Not,
            521 => SyntaxKind::Nothing,
            522 => SyntaxKind::Notify,
            523 => SyntaxKind::Notnull,
            524 => SyntaxKind::Nowait,
            525 => SyntaxKind::NullP,
            526 => SyntaxKind::Nullif,
            527 => SyntaxKind::NullsP,
            528 => SyntaxKind::Numeric,
            529 => SyntaxKind::ObjectP,
            530 => SyntaxKind::Of,
            531 => SyntaxKind::Off,
            532 => SyntaxKind::Offset,
            533 => SyntaxKind::Oids,
            534 => SyntaxKind::Old,
            535 => SyntaxKind::On,
            536 => SyntaxKind::Only,
            537 => SyntaxKind::Operator,
            538 => SyntaxKind::Option,
            539 => SyntaxKind::Options,
            540 => SyntaxKind::Or,
            541 => SyntaxKind::Order,
            542 => SyntaxKind::Ordinality,
            543 => SyntaxKind::Others,
            544 => SyntaxKind::OutP,
            545 => SyntaxKind::OuterP,
            546 => SyntaxKind::Over,
            547 => SyntaxKind::Overlaps,
            548 => SyntaxKind::Overlay,
            549 => SyntaxKind::Overriding,
            550 => SyntaxKind::Owned,
            551 => SyntaxKind::Owner,
            552 => SyntaxKind::Parallel,
            553 => SyntaxKind::Parser,
            554 => SyntaxKind::Partial,
            555 => SyntaxKind::Partition,
            556 => SyntaxKind::Passing,
            557 => SyntaxKind::Password,
            558 => SyntaxKind::Placing,
            559 => SyntaxKind::Plans,
            560 => SyntaxKind::Policy,
            561 => SyntaxKind::Position,
            562 => SyntaxKind::Preceding,
            563 => SyntaxKind::Precision,
            564 => SyntaxKind::Preserve,
            565 => SyntaxKind::Prepare,
            566 => SyntaxKind::Prepared,
            567 => SyntaxKind::Primary,
            568 => SyntaxKind::Prior,
            569 => SyntaxKind::Privileges,
            570 => SyntaxKind::Procedural,
            571 => SyntaxKind::Procedure,
            572 => SyntaxKind::Procedures,
            573 => SyntaxKind::Program,
            574 => SyntaxKind::Publication,
            575 => SyntaxKind::Quote,
            576 => SyntaxKind::Range,
            577 => SyntaxKind::Read,
            578 => SyntaxKind::Real,
            579 => SyntaxKind::Reassign,
            580 => SyntaxKind::Recheck,
            581 => SyntaxKind::Recursive,
            582 => SyntaxKind::Ref,
            583 => SyntaxKind::References,
            584 => SyntaxKind::Referencing,
            585 => SyntaxKind::Refresh,
            586 => SyntaxKind::Reindex,
            587 => SyntaxKind::RelativeP,
            588 => SyntaxKind::Release,
            589 => SyntaxKind::Rename,
            590 => SyntaxKind::Repeatable,
            591 => SyntaxKind::Replace,
            592 => SyntaxKind::Replica,
            593 => SyntaxKind::Reset,
            594 => SyntaxKind::Restart,
            595 => SyntaxKind::Restrict,
            596 => SyntaxKind::Returning,
            597 => SyntaxKind::Returns,
            598 => SyntaxKind::Revoke,
            599 => SyntaxKind::Right,
            600 => SyntaxKind::Role,
            601 => SyntaxKind::Rollback,
            602 => SyntaxKind::Rollup,
            603 => SyntaxKind::Routine,
            604 => SyntaxKind::Routines,
            605 => SyntaxKind::Row,
            606 => SyntaxKind::Rows,
            607 => SyntaxKind::Rule,
            608 => SyntaxKind::Savepoint,
            609 => SyntaxKind::Schema,
            610 => SyntaxKind::Schemas,
            611 => SyntaxKind::Scroll,
            612 => SyntaxKind::Search,
            613 => SyntaxKind::SecondP,
            614 => SyntaxKind::Security,
            615 => SyntaxKind::Select,
            616 => SyntaxKind::Sequence,
            617 => SyntaxKind::Sequences,
            618 => SyntaxKind::Serializable,
            619 => SyntaxKind::Server,
            620 => SyntaxKind::Session,
            621 => SyntaxKind::SessionUser,
            622 => SyntaxKind::Set,
            623 => SyntaxKind::Sets,
            624 => SyntaxKind::Setof,
            625 => SyntaxKind::Share,
            626 => SyntaxKind::Show,
            627 => SyntaxKind::Similar,
            628 => SyntaxKind::Simple,
            629 => SyntaxKind::Skip,
            630 => SyntaxKind::Smallint,
            631 => SyntaxKind::Snapshot,
            632 => SyntaxKind::Some,
            633 => SyntaxKind::SqlP,
            634 => SyntaxKind::Stable,
            635 => SyntaxKind::StandaloneP,
            636 => SyntaxKind::Start,
            637 => SyntaxKind::Statement,
            638 => SyntaxKind::Statistics,
            639 => SyntaxKind::Stdin,
            640 => SyntaxKind::Stdout,
            641 => SyntaxKind::Storage,
            642 => SyntaxKind::Stored,
            643 => SyntaxKind::StrictP,
            644 => SyntaxKind::StripP,
            645 => SyntaxKind::Subscription,
            646 => SyntaxKind::Substring,
            647 => SyntaxKind::Support,
            648 => SyntaxKind::Symmetric,
            649 => SyntaxKind::Sysid,
            650 => SyntaxKind::SystemP,
            651 => SyntaxKind::Table,
            652 => SyntaxKind::Tables,
            653 => SyntaxKind::Tablesample,
            654 => SyntaxKind::Tablespace,
            655 => SyntaxKind::Temp,
            656 => SyntaxKind::Template,
            657 => SyntaxKind::Temporary,
            658 => SyntaxKind::TextP,
            659 => SyntaxKind::Then,
            660 => SyntaxKind::Ties,
            661 => SyntaxKind::Time,
            662 => SyntaxKind::Timestamp,
            663 => SyntaxKind::To,
            664 => SyntaxKind::Trailing,
            665 => SyntaxKind::Transaction,
            666 => SyntaxKind::Transform,
            667 => SyntaxKind::Treat,
            668 => SyntaxKind::Trigger,
            669 => SyntaxKind::Trim,
            670 => SyntaxKind::TrueP,
            671 => SyntaxKind::Truncate,
            672 => SyntaxKind::Trusted,
            673 => SyntaxKind::TypeP,
            674 => SyntaxKind::TypesP,
            675 => SyntaxKind::Uescape,
            676 => SyntaxKind::Unbounded,
            677 => SyntaxKind::Uncommitted,
            678 => SyntaxKind::Unencrypted,
            679 => SyntaxKind::Union,
            680 => SyntaxKind::Unique,
            681 => SyntaxKind::Unknown,
            682 => SyntaxKind::Unlisten,
            683 => SyntaxKind::Unlogged,
            684 => SyntaxKind::Until,
            685 => SyntaxKind::Update,
            686 => SyntaxKind::User,
            687 => SyntaxKind::Using,
            688 => SyntaxKind::Vacuum,
            689 => SyntaxKind::Valid,
            690 => SyntaxKind::Validate,
            691 => SyntaxKind::Validator,
            692 => SyntaxKind::ValueP,
            693 => SyntaxKind::Values,
            694 => SyntaxKind::Varchar,
            695 => SyntaxKind::Variadic,
            696 => SyntaxKind::Varying,
            697 => SyntaxKind::Verbose,
            698 => SyntaxKind::VersionP,
            699 => SyntaxKind::View,
            700 => SyntaxKind::Views,
            701 => SyntaxKind::Volatile,
            702 => SyntaxKind::When,
            703 => SyntaxKind::Where,
            704 => SyntaxKind::WhitespaceP,
            705 => SyntaxKind::Window,
            706 => SyntaxKind::With,
            707 => SyntaxKind::Within,
            708 => SyntaxKind::Without,
            709 => SyntaxKind::Work,
            710 => SyntaxKind::Wrapper,
            711 => SyntaxKind::Write,
            712 => SyntaxKind::XmlP,
            713 => SyntaxKind::Xmlattributes,
            714 => SyntaxKind::Xmlconcat,
            715 => SyntaxKind::Xmlelement,
            716 => SyntaxKind::Xmlexists,
            717 => SyntaxKind::Xmlforest,
            718 => SyntaxKind::Xmlnamespaces,
            719 => SyntaxKind::Xmlparse,
            720 => SyntaxKind::Xmlpi,
            721 => SyntaxKind::Xmlroot,
            722 => SyntaxKind::Xmlserialize,
            723 => SyntaxKind::Xmltable,
            724 => SyntaxKind::YearP,
            725 => SyntaxKind::YesP,
            726 => SyntaxKind::Zone,
            727 => SyntaxKind::NotLa,
            728 => SyntaxKind::NullsLa,
            729 => SyntaxKind::WithLa,
            730 => SyntaxKind::Postfixop,
            731 => SyntaxKind::Uminus,
            _ => panic!("Unknown StatementToken: {:?}", token),
        }
    }

    /// Gets the type of a `SyntaxKind`.
    /// Maybe this can be generated from the ScanToken type in pg_query.rs
    pub fn get_type(&self) -> Option<SyntaxKindType> {
        match self {
            SyntaxKind::Whitespace => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii40 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii41 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii44 => Some(SyntaxKindType::Follow),
            SyntaxKind::Ascii59 => Some(SyntaxKindType::Close),
            SyntaxKind::Ascii61 => Some(SyntaxKindType::Follow),
            SyntaxKind::From => Some(SyntaxKindType::Follow),
            SyntaxKind::Where => Some(SyntaxKindType::Follow),
            _ => None,
        }
    }
}
