---
source: crates/parser/tests/statement_parser_test.rs
description: "CREATE TABLESPACE x OWNER a LOCATION 'b' WITH (random_page_cost=42, seq_page_cost=3);"
---
Parse {
    cst: SourceFile@0..85
      CreateTableSpaceStmt@0..85
        Create@0..6 "CREATE"
        Whitespace@6..7 " "
        Tablespace@7..17 "TABLESPACE"
        Whitespace@17..18 " "
        Ident@18..19 "x"
        Whitespace@19..20 " "
        Owner@20..25 "OWNER"
        Whitespace@25..26 " "
        RoleSpec@26..27
          Ident@26..27 "a"
        Whitespace@27..28 " "
        Location@28..36 "LOCATION"
        Whitespace@36..37 " "
        Sconst@37..40 "'b'"
        Whitespace@40..41 " "
        With@41..45 "WITH"
        Whitespace@45..46 " "
        Ascii40@46..47 "("
        DefElem@47..66
          Ident@47..63 "random_page_cost"
          Ascii61@63..64 "="
          Iconst@64..66 "42"
        Ascii44@66..67 ","
        Whitespace@67..68 " "
        DefElem@68..83
          Ident@68..81 "seq_page_cost"
          Ascii61@81..82 "="
          Iconst@82..83 "3"
        Ascii41@83..84 ")"
        Ascii59@84..85 ";"
    ,
    errors: [],
    stmts: [
        RawStmt {
            stmt: CreateTableSpaceStmt(
                CreateTableSpaceStmt {
                    tablespacename: "x",
                    owner: Some(
                        RoleSpec {
                            roletype: RolespecCstring,
                            rolename: "a",
                            location: 26,
                        },
                    ),
                    location: "b",
                    options: [
                        Node {
                            node: Some(
                                DefElem(
                                    DefElem {
                                        defnamespace: "",
                                        defname: "random_page_cost",
                                        arg: Some(
                                            Node {
                                                node: Some(
                                                    Integer(
                                                        Integer {
                                                            ival: 42,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                        defaction: DefelemUnspec,
                                        location: 47,
                                    },
                                ),
                            ),
                        },
                        Node {
                            node: Some(
                                DefElem(
                                    DefElem {
                                        defnamespace: "",
                                        defname: "seq_page_cost",
                                        arg: Some(
                                            Node {
                                                node: Some(
                                                    Integer(
                                                        Integer {
                                                            ival: 3,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                        defaction: DefelemUnspec,
                                        location: 68,
                                    },
                                ),
                            ),
                        },
                    ],
                },
            ),
            range: 0..84,
        },
    ],
}
