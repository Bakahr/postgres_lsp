---
source: crates/parser/tests/statement_parser_test.rs
description: "CREATE PROCEDURE insert_data(a integer, b integer) LANGUAGE SQL BEGIN ATOMIC INSERT INTO tbl VALUES (a); INSERT INTO tbl VALUES (b); END;"
---
Parse {
    cst: SourceFile@0..134
      Create@0..6 "CREATE"
      Whitespace@6..7 " "
      Procedure@7..16 "PROCEDURE"
      Whitespace@16..17 " "
      Ident@17..28 "insert_data"
      Ascii40@28..29 "("
      Ident@29..30 "a"
      Whitespace@30..31 " "
      Integer@31..38 "integer"
      Ascii44@38..39 ","
      Whitespace@39..40 " "
      Ident@40..41 "b"
      Whitespace@41..42 " "
      Integer@42..49 "integer"
      Ascii41@49..50 ")"
      Whitespace@50..51 " "
      Language@51..59 "LANGUAGE"
      Whitespace@59..60 " "
      SqlP@60..63 "SQL"
      BeginP@63..68 "BEGIN"
      Whitespace@68..69 " "
      Atomic@69..75 "ATOMIC"
      InsertStmt@75..102
        Insert@75..81 "INSERT"
        Whitespace@81..82 " "
        Into@82..86 "INTO"
        Whitespace@86..87 " "
        RangeVar@87..90
          Ident@87..90 "tbl"
        Whitespace@90..91 " "
        SelectStmt@91..100
          Values@91..97 "VALUES"
          Whitespace@97..98 " "
          Ascii40@98..99 "("
          List@99..100
            ColumnRef@99..100
              Ident@99..100 "a"
        Ascii41@100..101 ")"
        Ascii59@101..102 ";"
      InsertStmt@102..129
        Insert@102..108 "INSERT"
        Whitespace@108..109 " "
        Into@109..113 "INTO"
        Whitespace@113..114 " "
        RangeVar@114..117
          Ident@114..117 "tbl"
        Whitespace@117..118 " "
        SelectStmt@118..127
          Values@118..124 "VALUES"
          Whitespace@124..125 " "
          Ascii40@125..126 "("
          List@126..127
            ColumnRef@126..127
              Ident@126..127 "b"
        Ascii41@127..128 ")"
        Ascii59@128..129 ";"
      Whitespace@129..130 " "
      EndP@130..133 "END"
      Ascii59@133..134 ";"
    ,
    errors: [
        SyntaxError(
            "Expected Ascii59, found Whitespace",
            76..76,
        ),
        SyntaxError(
            "Invalid statement: syntax error at or near \"ATOMIC\"",
            20..23,
        ),
    ],
    stmts: [
        RawStmt {
            stmt: InsertStmt(
                InsertStmt {
                    relation: Some(
                        RangeVar {
                            catalogname: "",
                            schemaname: "",
                            relname: "tbl",
                            inh: true,
                            relpersistence: "p",
                            alias: None,
                            location: 12,
                        },
                    ),
                    cols: [],
                    select_stmt: Some(
                        Node {
                            node: Some(
                                SelectStmt(
                                    SelectStmt {
                                        distinct_clause: [],
                                        into_clause: None,
                                        target_list: [],
                                        from_clause: [],
                                        where_clause: None,
                                        group_clause: [],
                                        group_distinct: false,
                                        having_clause: None,
                                        window_clause: [],
                                        values_lists: [
                                            Node {
                                                node: Some(
                                                    List(
                                                        List {
                                                            items: [
                                                                Node {
                                                                    node: Some(
                                                                        ColumnRef(
                                                                            ColumnRef {
                                                                                fields: [
                                                                                    Node {
                                                                                        node: Some(
                                                                                            String(
                                                                                                String {
                                                                                                    sval: "a",
                                                                                                },
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ],
                                                                                location: 24,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            },
                                        ],
                                        sort_clause: [],
                                        limit_offset: None,
                                        limit_count: None,
                                        limit_option: Default,
                                        locking_clause: [],
                                        with_clause: None,
                                        op: SetopNone,
                                        all: false,
                                        larg: None,
                                        rarg: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    on_conflict_clause: None,
                    returning_list: [],
                    with_clause: None,
                    r#override: OverridingNotSet,
                },
            ),
            range: 76..104,
        },
        RawStmt {
            stmt: InsertStmt(
                InsertStmt {
                    relation: Some(
                        RangeVar {
                            catalogname: "",
                            schemaname: "",
                            relname: "tbl",
                            inh: true,
                            relpersistence: "p",
                            alias: None,
                            location: 12,
                        },
                    ),
                    cols: [],
                    select_stmt: Some(
                        Node {
                            node: Some(
                                SelectStmt(
                                    SelectStmt {
                                        distinct_clause: [],
                                        into_clause: None,
                                        target_list: [],
                                        from_clause: [],
                                        where_clause: None,
                                        group_clause: [],
                                        group_distinct: false,
                                        having_clause: None,
                                        window_clause: [],
                                        values_lists: [
                                            Node {
                                                node: Some(
                                                    List(
                                                        List {
                                                            items: [
                                                                Node {
                                                                    node: Some(
                                                                        ColumnRef(
                                                                            ColumnRef {
                                                                                fields: [
                                                                                    Node {
                                                                                        node: Some(
                                                                                            String(
                                                                                                String {
                                                                                                    sval: "b",
                                                                                                },
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ],
                                                                                location: 24,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            },
                                        ],
                                        sort_clause: [],
                                        limit_offset: None,
                                        limit_count: None,
                                        limit_option: Default,
                                        locking_clause: [],
                                        with_clause: None,
                                        op: SetopNone,
                                        all: false,
                                        larg: None,
                                        rarg: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    on_conflict_clause: None,
                    returning_list: [],
                    with_clause: None,
                    r#override: OverridingNotSet,
                },
            ),
            range: 104..132,
        },
    ],
}
