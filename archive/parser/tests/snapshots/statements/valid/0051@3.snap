---
source: crates/parser/tests/statement_parser_test.rs
description: CREATE INDEX title_idx ON films (title) WITH (deduplicate_items = off);
---
Parse {
    cst: SourceFile@0..71
      IndexStmt@0..71
        Create@0..6 "CREATE"
        Whitespace@6..7 " "
        Index@7..12 "INDEX"
        Whitespace@12..13 " "
        Ident@13..22 "title_idx"
        Whitespace@22..23 " "
        On@23..25 "ON"
        Whitespace@25..26 " "
        RangeVar@26..31
          Ident@26..31 "films"
        Whitespace@31..32 " "
        Ascii40@32..33 "("
        IndexElem@33..38
          Ident@33..38 "title"
        Ascii41@38..39 ")"
        Whitespace@39..40 " "
        With@40..44 "WITH"
        Whitespace@44..45 " "
        Ascii40@45..46 "("
        DefElem@46..69
          Ident@46..63 "deduplicate_items"
          Whitespace@63..64 " "
          Ascii61@64..65 "="
          Whitespace@65..66 " "
          TypeName@66..69
            Off@66..69 "off"
        Ascii41@69..70 ")"
        Ascii59@70..71 ";"
    ,
    errors: [],
    stmts: [
        RawStmt {
            stmt: IndexStmt(
                IndexStmt {
                    idxname: "title_idx",
                    relation: Some(
                        RangeVar {
                            catalogname: "",
                            schemaname: "",
                            relname: "films",
                            inh: true,
                            relpersistence: "p",
                            alias: None,
                            location: 26,
                        },
                    ),
                    access_method: "btree",
                    table_space: "",
                    index_params: [
                        Node {
                            node: Some(
                                IndexElem(
                                    IndexElem {
                                        name: "title",
                                        expr: None,
                                        indexcolname: "",
                                        collation: [],
                                        opclass: [],
                                        opclassopts: [],
                                        ordering: SortbyDefault,
                                        nulls_ordering: SortbyNullsDefault,
                                    },
                                ),
                            ),
                        },
                    ],
                    index_including_params: [],
                    options: [
                        Node {
                            node: Some(
                                DefElem(
                                    DefElem {
                                        defnamespace: "",
                                        defname: "deduplicate_items",
                                        arg: Some(
                                            Node {
                                                node: Some(
                                                    TypeName(
                                                        TypeName {
                                                            names: [
                                                                Node {
                                                                    node: Some(
                                                                        String(
                                                                            String {
                                                                                sval: "off",
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                            type_oid: 0,
                                                            setof: false,
                                                            pct_type: false,
                                                            typmods: [],
                                                            typemod: -1,
                                                            array_bounds: [],
                                                            location: 66,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                        defaction: DefelemUnspec,
                                        location: 46,
                                    },
                                ),
                            ),
                        },
                    ],
                    where_clause: None,
                    exclude_op_names: [],
                    idxcomment: "",
                    index_oid: 0,
                    old_node: 0,
                    old_create_subid: 0,
                    old_first_relfilenode_subid: 0,
                    unique: false,
                    nulls_not_distinct: false,
                    primary: false,
                    isconstraint: false,
                    deferrable: false,
                    initdeferred: false,
                    transformed: false,
                    concurrent: false,
                    if_not_exists: false,
                    reset_default_tblspc: false,
                },
            ),
            range: 0..70,
        },
    ],
}
